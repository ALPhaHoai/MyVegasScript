<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sony.Vegas</name>
    </assembly>
    <members>
        <member name="T:Sony.Vegas.CommandCategory">
            <summary>Custom command categories</summary> 
        </member>
        <member name="F:Sony.Vegas.CommandCategory.Edit">
            <summary>Category for editing commands.</summary> 
        </member>
        <member name="F:Sony.Vegas.CommandCategory.View">
            <summary>Category for commands that show non-modal user interfaces.</summary> 
        </member>
        <member name="F:Sony.Vegas.CommandCategory.Tools">
            <summary>Category for commands that provide miscellaneous tools.</summary> 
        </member>
        <member name="T:Sony.Vegas.ScriptEngineType">
            <summary>Enumeration of script engine types supported by Vegas</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.Unknown">
            <summary>Unknown script engine type</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.CSharp">
            <summary>C# .NET using the CodeDOM compiler</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.JScript">
            <summary>JScript .NET using the CodeDOM compiler</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.VBScript">
            <summary>Visual Basic .NET using the CodeDOM compiler</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.Precompiled">
            <summary>Precompiled .NET assembly</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.JScript_VSA">
            <summary>JScript .NET using the VSA compiler (obsolete, use CodeDOM)</summary> 
        </member>
        <member name="F:Sony.Vegas.ScriptEngineType.VBScript_VSA">
            <summary>Visual Basic .NET using the VSA compiler (obsolete, use CodeDOM)</summary> 
        </member>
        <member name="T:Sony.Vegas.DockWindowStyle">
            <summary>Dock window styles</summary> 
        </member>
        <member name="F:Sony.Vegas.DockWindowStyle.Detached">
            <summary>Window is detached and not able to be docked.</summary> 
        </member>
        <member name="F:Sony.Vegas.DockWindowStyle.Floating">
            <summary>Window is detached and able to be docked.</summary> 
        </member>
        <member name="F:Sony.Vegas.DockWindowStyle.Docked">
            <summary>Window is docked.</summary> 
        </member>
        <member name="T:Sony.Vegas.RenderStatus">
            <summary>Enumeration of return values for render commands.</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Unknown">
            <summary>unknown render status</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Queued">
            <summary>render queued</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.NothingToDo">
            <summary>given the arguments, there was nothing to render</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Rendering">
            <summary>render in progress</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Stitching">
            <summary>stitching segments</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Complete">
            <summary>render completed</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Canceled">
            <summary>render canceled</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Failed">
            <summary>render failed</summary> 
        </member>
        <member name="F:Sony.Vegas.RenderStatus.Quit">
            <summary>application was quit mid-render</summary> 
        </member>
        <member name="T:Sony.Vegas.MediaType">
            <summary>Enumeration of media types.</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaType.Unknown">
            <summary>unknown media type</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaType.Audio">
            <summary>audio media type</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaType.Video">
            <summary>video media type</summary> 
        </member>
        <member name="T:Sony.Vegas.MediaBinNodeType">
            <summary>Enumeration of media bin object types.</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaBinNodeType.Unknown">
            <summary>Unknown media bin object type.</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaBinNodeType.Bin">
            <summary>Media bin object type.</summary> 
        </member>
        <member name="F:Sony.Vegas.MediaBinNodeType.MediaRef">
            <summary>Media object type.</summary> 
        </member>
        <member name="T:Sony.Vegas.VideoResampleMode">
            <summary>Enumeration of video resampling modes.</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoResampleMode.Smart">
            <summary>resample if needed</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoResampleMode.Force">
            <summary>force resample</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoResampleMode.Disable">
            <summary>don't resample</summary> 
        </member>
        <member name="T:Sony.Vegas.ChannelRemapping">
            <summary>Enumeration of audio channel remapping modes.</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.None">
            <summary>no channel remapping</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.DisableLeft">
            <summary>disable left channel</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.DisableRight">
            <summary>disable right channel</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.MuteLeft">
            <summary>mute left channel</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.MuteRight">
            <summary>mute right channel</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.Mono">
            <summary>mono</summary> 
        </member>
        <member name="F:Sony.Vegas.ChannelRemapping.Swap">
            <summary>swap channels</summary> 
        </member>
        <member name="T:Sony.Vegas.CompositeMode">
            <summary>Video track composite modes.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Invalid">
            <summary>Invalid composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Custom">
            <summary>Use compositing effect.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.SrcAlpha">
            <summary>Source alpha composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.SrcAlpha3D">
            <summary>3D source alpha composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Add">
            <summary>Add composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Subtract">
            <summary>Subtract composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Multiply">
            <summary>Multiply composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Cut">
            <summary>Cut composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Screen">
            <summary>Screen composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Overlay">
            <summary>Overlay composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.HardLight">
            <summary>Hard light composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Dodge">
            <summary>Dodge composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Burn">
            <summary>Burn composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Darken">
            <summary>Darken composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Lighten">
            <summary>Lighten composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.Difference">
            <summary>Difference composite mode.</summary> 
        </member>
        <member name="F:Sony.Vegas.CompositeMode.DifferenceSquared">
            <summary>Difference squared composite mode.</summary> 
        </member>
        <member name="T:Sony.Vegas.VideoKeyframeType">
            <summary>Enumeration of video key frame interpolation types.</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Linear">
            <summary>linear interpolation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Hold">
            <summary>no interpolation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Slow">
            <summary>slow (accelerating) interpolation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Fast">
            <summary>fast (decelerating) interpolation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Smooth">
            <summary>smooth interpolation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoKeyframeType.Sharp">
            <summary>sharp interpolation</summary> 
        </member>
        <member name="T:Sony.Vegas.VideoFieldOrder">
            <summary>Enumeration of video field orderings.</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoFieldOrder.Unknown">
            <summary>unknown video field order</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoFieldOrder.ProgressiveScan">
            <summary>progressive scan (multimedia)</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoFieldOrder.UpperFieldFirst">
            <summary>interlaced (upper field first)</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoFieldOrder.LowerFieldFirst">
            <summary>interlaced (lower field first)</summary> 
        </member>
        <member name="T:Sony.Vegas.VideoOutputRotation">
            <summary>Enumeration of video output rotation settings.</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoOutputRotation.None">
            <summary>no rotation</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoOutputRotation.QuarterTurnClockwise">
            <summary>90 degrees clockwise</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoOutputRotation.Inverted">
            <summary>90 degrees clockwise</summary> 
        </member>
        <member name="F:Sony.Vegas.VideoOutputRotation.QuarterTurnCounterclockwise">
            <summary>90 degrees counterclockwise</summary> 
        </member>
        <member name="T:Sony.Vegas.PixelFormat">
            <summary>Enumeration of video pixel formats.</summary> 
        </member>
        <member name="F:Sony.Vegas.PixelFormat.Int8Bit">
            <summary>8-bit integer.</summary> 
        </member>
        <member name="F:Sony.Vegas.PixelFormat.Float32Bit">
            <summary>32-bit floating point.</summary> 
        </member>
        <member name="T:Sony.Vegas.RulerFormat">
            <summary>Enumeration of ruler formats.</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Samples">
            <summary>samples</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Time">
            <summary>time</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Seconds">
            <summary>seconds</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.TimeAndFrames">
            <summary>time and frames</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.AbsoluteFrames">
            <summary>absolute frames</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.MeasuresAndBeats">
            <summary>measures and beats</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.FeetAndFrames16mm">
            <summary>Feet and Frames 16mm (40 fpf)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.FeetAndFrames35mm">
            <summary>Feet and Frames 35mm (16 fpf)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.SmpteFilmSyncIVTC">
            <summary>SMPTE Film Sync IVTC (23.976 fps, Video)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.SmpteFilmSync">
            <summary>SMPTE Film Sync (24 fps, Film)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.SmpteEBU">
            <summary>SMPTE EBU (25 fps, Video)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.SmpteNonDrop">
            <summary>SMPTE Non-Drop (29.97 fps, Video)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.SmpteDrop">
            <summary>SMPTE Drop (29.97 fps, Video)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Smpte30">
            <summary>SMPTE 30 (30 fps, Audio)</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.AudioCDTime">
            <summary>Audio CD time</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Nanoseconds">
            <summary>units of 100 nanoseconds</summary> 
        </member>
        <member name="F:Sony.Vegas.RulerFormat.Microseconds">
            <summary>microseconds</summary> 
        </member>
        <member name="T:Sony.Vegas.CurveType">
            <summary>Enumeration of envelope curve types.</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Invalid">
            <summary>invalid envelope curve type</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Sharp">
            <summary>cubic sharp fade</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Slow">
            <summary>logarithmic slow fade</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.None">
            <summary>no fade (hold)</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Linear">
            <summary>linear fade</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Fast">
            <summary>logarithmic fast fade</summary>
        </member>
        <member name="F:Sony.Vegas.CurveType.Smooth">
            <summary>cubic smooth fade</summary>
        </member>
        <member name="T:Sony.Vegas.BeatValue">
            <summary>Enumeration of beat values.</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.Whole">
            <summary>Whole Note</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.Half">
            <summary>Half Note</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.Quarter">
            <summary>Quarter Note</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.Eighth">
            <summary>Eighth Note</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.Sixteenth">
            <summary>16th Note</summary>
        </member>
        <member name="F:Sony.Vegas.BeatValue.ThirtySecond">
            <summary>32nd Note</summary>
        </member>
        <member name="T:Sony.Vegas.AudioBusMode">
            <summary>Enumeration of audio bus modes.</summary>
        </member>
        <member name="F:Sony.Vegas.AudioBusMode.Stereo">
            <summary>Stereo (2 channels)</summary>
        </member>
        <member name="F:Sony.Vegas.AudioBusMode.Surround">
            <summary>Surround (5.1)</summary>
        </member>
        <member name="T:Sony.Vegas.AudioResampleQuality">
            <summary>Enumeration of audio resample quality modes.</summary>
        </member>
        <member name="F:Sony.Vegas.AudioResampleQuality.Preview">
            <summary>preview (lower) quality</summary>
        </member>
        <member name="F:Sony.Vegas.AudioResampleQuality.Good">
            <summary>good quality</summary>
        </member>
        <member name="F:Sony.Vegas.AudioResampleQuality.Best">
            <summary>best quality</summary>
        </member>
        <member name="T:Sony.Vegas.VideoRenderQuality">
            <summary>Enumeration of video render quality modes.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoRenderQuality.Draft">
            <summary>draft quality</summary>
        </member>
        <member name="F:Sony.Vegas.VideoRenderQuality.Preview">
            <summary>preview quality</summary>
        </member>
        <member name="F:Sony.Vegas.VideoRenderQuality.Good">
            <summary>good quality</summary>
        </member>
        <member name="F:Sony.Vegas.VideoRenderQuality.Best">
            <summary>best quality</summary>
        </member>
        <member name="T:Sony.Vegas.VideoDeinterlaceMethod">
            <summary>Enumeration of video deinterlace methods.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoDeinterlaceMethod.None">
            <summary>no deinterlacing</summary>
        </member>
        <member name="F:Sony.Vegas.VideoDeinterlaceMethod.BlendFields">
            <summary>deinterlace by blend fields</summary>
        </member>
        <member name="F:Sony.Vegas.VideoDeinterlaceMethod.InterpolateFields">
            <summary>deinterlace by interpolation</summary>
        </member>
        <member name="T:Sony.Vegas.MotionBlurType">
            <summary>Enumeration of motion blur types.</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.Gaussian">
            <summary>gaussian</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.Pyramid">
            <summary>pyramid</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.Box">
            <summary>box</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.AsymmetricGaussian">
            <summary>asymmetric gaussian</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.AsymmetricPyramid">
            <summary>asymmetric pyramid</summary>
        </member>
        <member name="F:Sony.Vegas.MotionBlurType.AsymmetricBox">
            <summary>asymmetric box</summary>
        </member>
        <member name="T:Sony.Vegas.ImageFileFormat">
            <summary>Enumeration of image file formats.</summary>
        </member>
        <member name="F:Sony.Vegas.ImageFileFormat.PNG">
            <summary>PNG format</summary>
        </member>
        <member name="F:Sony.Vegas.ImageFileFormat.JPEG">
            <summary>JPEG format</summary>
        </member>
        <member name="T:Sony.Vegas.VideoAlphaType">
            <summary>Enumeration of video alpha modes.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoAlphaType.Undefined">
            <summary>undefined alpha mode</summary>
        </member>
        <member name="F:Sony.Vegas.VideoAlphaType.None">
            <summary>no alpha channel</summary>
        </member>
        <member name="F:Sony.Vegas.VideoAlphaType.Straight">
            <summary>straight alpha channel</summary>
        </member>
        <member name="F:Sony.Vegas.VideoAlphaType.Premultiplied">
            <summary>premultiplied alpha</summary>
        </member>
        <member name="F:Sony.Vegas.VideoAlphaType.PremultipliedDirty">
            <summary>premultiplied (dirty)</summary>
        </member>
        <member name="T:Sony.Vegas.PanType">
            <summary>Enumeration of audio pan settings.</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Add">
            <summary>add</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.ConstantPower">
            <summary>constant power</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Balance">
            <summary>balance</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Notch3Db">
            <summary>notched at 3 Db</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Notch6Db">
            <summary>Notched at 6Db</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Film">
            <summary>film</summary>
        </member>
        <member name="F:Sony.Vegas.PanType.Unknown">
            <summary>unknown/invalid pan type</summary>
        </member>
        <member name="T:Sony.Vegas.LowPassFilterQuality">
            <summary>Enumeration of low-pass filter qualities</summary>
        </member>
        <member name="F:Sony.Vegas.LowPassFilterQuality.Preview">
            <summary>Preview quality</summary>
        </member>
        <member name="F:Sony.Vegas.LowPassFilterQuality.Good">
            <summary>good quality</summary>
        </member>
        <member name="F:Sony.Vegas.LowPassFilterQuality.Best">
            <summary>best quality</summary>
        </member>
        <member name="T:Sony.Vegas.AppChangeFlag">
            <summary>Enumeration of application change flags</summary>
        </member>
        <member name="T:Sony.Vegas.VideoPreviewSize">
            <summary>Enumeration of video preview render size settings.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoPreviewSize.Full">
            <summary>Render video preview at full size.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoPreviewSize.Auto">
            <summary>Render video preview at auto size.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoPreviewSize.Half">
            <summary>Render video preview at half size.</summary>
        </member>
        <member name="F:Sony.Vegas.VideoPreviewSize.Quarter">
            <summary>Render video preview at quarter size.</summary>
        </member>
        <member name="T:Sony.Vegas.ProjectChangeFlag">
            <summary>Enumeration of project change flags</summary>
        </member>
        <member name="T:Sony.Vegas.VideoColor">
            <summary>Represents a color used in various video properties</summary>
        </member>
        <member name="M:Sony.Vegas.VideoColor.FromByteValues(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Create a new video color from separate color byte values.</summary>
            <param name="r">the red component</param>
            <param name="g">the green component</param>
            <param name="b">the blue component</param>
            <param name="a">the alpha component</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.FromByteValues(System.Byte,System.Byte,System.Byte)">
            <summary>Create a new video color from separate color byte values.</summary>
            <param name="r">the red component</param>
            <param name="g">the green component</param>
            <param name="b">the blue component</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor">
            <summary>Construct a new video color with default value (black).</summary>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Construct a new video color from separate color values.</summary>
            <param name="r">the red component (0 to 1)</param>
            <param name="g">the green component (0 to 1)</param>
            <param name="b">the blue component (0 to 1)</param>
            <param name="a">the alpha component (0 to 1)</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor(System.Single,System.Single,System.Single)">
            <summary>Construct a new video color (with full alpha) from separate color values.</summary>
            <param name="r">the red component (0 to 1)</param>
            <param name="g">the green component (0 to 1)</param>
            <param name="b">the blue component (0 to 1)</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor(System.UInt32)">
            <summary>Construct a new video color from a combined color value.</summary>
            <param name="argb">a combined color value</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>Construct a new video color from separate color byte values.</summary>
            <param name="r">the red component</param>
            <param name="g">the green component</param>
            <param name="b">the blue component</param>
            <param name="a">the alpha component</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.#ctor(System.Byte,System.Byte,System.Byte)">
            <summary>Construct a new video color (with full alpha) from separate color byte values.</summary>
            <param name="r">the red component</param>
            <param name="g">the green component</param>
            <param name="b">the blue component</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current VideoColor.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoColor.op_Equality(Sony.Vegas.VideoColor,Sony.Vegas.VideoColor)">
            <summary>Determines whether the specified VideoColor objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.op_Inequality(Sony.Vegas.VideoColor,Sony.Vegas.VideoColor)">
            <summary>Determines whether the specified VideoColor objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.VideoColor.GetHashCode">
            <summary>Serves as a hash function for VideoColor objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoColor.ToString">
            <summary>Returns a string representation of the color.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoColor.ToArgb">
            <summary>Returns the 32-bit unsigned integer representation of the color (0xAARRGGBB).</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.Red">
            <summary>Get or set the red component of the color as a float value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.Green">
            <summary>Get or set the green component of the color as a float value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.Blue">
            <summary>Get or set the blue component of the color as a float value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.Alpha">
            <summary>Get or set the alpha component of the color as a float value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.R">
            <summary>Get or set the red component of the color as a byte value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.G">
            <summary>Get or set the green component of the color as a byte value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.B">
            <summary>Get or set the blue component of the color as a byte value.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoColor.A">
            <summary>Get or set the alpha component of the color as a byte value.</summary>
        </member>
        <member name="T:Sony.Vegas.BaseList`1">
            <summary>Base class for most collections in the Vegas object model.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.CopyTo(System.Array,System.Int32)">
            <summary>Copies the items in the collection to an array.</summary>
            <param name="array">destination array</param>
            <param name="index">start index in the array</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.CopyTo(`0[],System.Int32)">
            <summary>Copies the items in the collection to an array.</summary>
            <param name="array">destination array</param>
            <param name="index">start index in the array</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.GetEnumerator">
            <summary>Get a new enumerator for the collection.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Get a new enumerator for the collection.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Add(System.Object)">
            <summary>Add an item to the collection.</summary>
            <param name="item">object to add</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Add(`0)">
            <summary>Add an item to the collection.</summary>
            <param name="item">object to add</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Clear">
            <summary>Removes all items from the collection.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Contains(System.Object)">
            <summary>Indicates whether the given object is a member of the collection.</summary>
            <param name="item">object whose membership is determined</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.IndexOf(System.Object)">
            <summary>Get the index of the given object in the collection.</summary>
            <param name="item">object whose index is determined</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.IndexOf(`0)">
            <summary>Get the index of the given object in the collection.</summary>
            <param name="item">object whose index is determined</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Insert(System.Int32,System.Object)">
            <summary>Inserts the object at the given index.</summary>
            <param name="index">zero-based index</param>
            <param name="item">object to insert</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Insert(System.Int32,`0)">
            <summary>Inserts the object at the given index.</summary>
            <param name="index">zero-based index of inserted item</param>
            <param name="item">item to insert</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Remove(`0)">
            <summary>Removes the given object from the collection.</summary>
            <param name="item">object to be removed</param>
            <returns>True if the item is removed, false otherwise.</returns>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.Remove(System.Object)">
            <summary>Removes the given object from the collection.</summary>
            <param name="item">object to be removed</param>
        </member>
        <member name="M:Sony.Vegas.BaseList`1.RemoveAt(System.Int32)">
            <summary>Removes the object at the given index.</summary>
            <param name="index">index of item to be removed</param>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.Count">
            <summary>Get the number of items in the collection.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.IsSynchronized">
            <summary>Indicates whether access to the collection is thread safe.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.SyncRoot">
            <summary>Get the object that can be used to to synchronize access to the collection.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.Item(System.Int32)">
            <summary>Get the nth item in the collection.</summary>
            <param name="index">zero-based index of item</param>
        </member>
        <member name="P:Sony.Vegas.BaseList`1.System#Collections#IList#Item(System.Int32)">
            <summary>Get the nth item in the collection.</summary>
            <param name="index">zero-based index of item</param>
        </member>
        <member name="T:Sony.Vegas.Timecode">
            <summary>Represents a time duration or position in Vegas.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromString(System.String)">
            <summary>Create a new (duration) Timecode from a string representation using the current project's ruler format.</summary>
            <param name="timestamp">a string representation of the new timecode</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromPositionString(System.String)">
            <summary>Create a new (position) Timecode from a string representation using the current project's ruler format.</summary>
            <param name="timestamp">a string representation of the new timecode</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromString(System.String,Sony.Vegas.RulerFormat)">
            <summary>Create a new (duration) Timecode from a string representation using the provided ruler format.</summary>
            <param name="timestamp">a string representation of the new timecode</param>
            <param name="format">ruler format to use for conversion</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromPositionString(System.String,Sony.Vegas.RulerFormat)">
            <summary>Create a new (position) Timecode from a string representation using the provided ruler format.</summary>
            <param name="timestamp">a string representation of the new timecode</param>
            <param name="format">ruler format to use for conversion</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromString(System.String,Sony.Vegas.RulerFormat,System.Boolean)">
            <summary>Create a new Timecode from a string representation using the provided ruler format and a value that indicates whether the timecode represents a position or duration.</summary>
            <param name="timestamp">a string representation of the new timecode</param>
            <param name="format">ruler format to use for conversion</param>
            <param name="isPosition">indicates whether the timecode represents a position (true) or duration (false)</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromMilliseconds(System.Double)">
            <summary>Create a new Timecode from a number of milliseconds.</summary>
            <param name="milliseconds">number of milliseconds.</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromSeconds(System.Double)">
            <summary>Create a new Timecode from a number of seconds.</summary>
            <param name="seconds">number of seconds.</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromNanos(System.Int64)">
            <summary>Create a new Timecode from a number of hundred nanosecond units.</summary>
            <param name="nanos">number of hundred nanosecond time units.</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.FromFrames(System.Int64)">
            <summary>Create a new Timecode from a number of frames.</summary>
            <param name="frames">number of frames (frame length depends on current project's ruler format).</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.#ctor">
            <summary>Create a new timecode representing zero time.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.#ctor(System.Double)">
            <summary>Obsolete. Use Timecode.FromMilliseconds</summary>
            <param name="milliseconds">number of milliseconds</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.#ctor(System.String)">
            <summary>Obsolete. Use Timecode.FromString</summary>
            <param name="timestamp">a string representation of the new timecode</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Timecode.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Equality(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Determines whether the specified Timecode objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Inequality(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Determines whether the specified Timecode objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.GetHashCode">
            <summary>Serves as a hash function for Timecode objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_LessThan(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Indicates whether one timecode is less than another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_GreaterThan(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Indicates whether one timecode is greater than another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_LessThanOrEqual(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Indicates whether one timecode is less than or equal to another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_GreaterThanOrEqual(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Indicates whether one timecode is greater than or equal to another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Addition(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Add one timecode to another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Subtraction(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Subtract one timecode to another.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Increment(Sony.Vegas.Timecode)">
            <summary>Increment a timecode by one frame.</summary>
            <param name="value">Timecode value to increment</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.op_Decrement(Sony.Vegas.Timecode)">
            <summary>Decrement a timecode by one frame.</summary>
            <param name="value">Timecode value to increment</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToString">
            <summary>Get the string representation of the timecode using the current project's ruler format.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToPositionString">
            <summary>Get the string representation of the (position) timecode using the current project's ruler format.</summary>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToString(Sony.Vegas.RulerFormat)">
            <summary>Get the string representation of the timecode using the provided ruler format.</summary>
            <param name="format">ruler format to use for conversion</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToPositionString(Sony.Vegas.RulerFormat)">
            <summary>Get the string representation of a (position) timecode using the provided ruler format.</summary>
            <param name="format">ruler format to use for conversion</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToString(Sony.Vegas.RulerFormat,System.Boolean)">
            <summary>Get the string representation of a timecode using the provided ruler format and flag that indicates whether the timecode represents a duration or position.</summary>
            <param name="format">ruler format to use for conversion</param>
            <param name="isPosition">indicates whether the timecode represents a position (true) or duration (false)</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.CompareTo(System.Object)">
            <summary>Compares this timecode to another.</summary>
            <param name="other">Timecode object which is compared to this instance.</param>
        </member>
        <member name="M:Sony.Vegas.Timecode.ToMilliseconds">
            <summary>Convert the timecode to a number of milliseconds.</summary>
        </member>
        <member name="P:Sony.Vegas.Timecode.Nanos">
            <summary>Get or set the timecode's internal representation in
            hundred nanosecond units.</summary>
        </member>
        <member name="P:Sony.Vegas.Timecode.FrameCount">
            <summary>Get or set the number of frames represented by the timecode.</summary>
        </member>
        <member name="T:Sony.Vegas.CustomDataContainer">
            <summary>A container for custom data saved with various objects in a vegas project.</summary>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.GetStream(System.Guid,System.IO.Stream)">
            <summary>Retrieves custom data, writing it to a stream.</summary>
            <param name="dataID">the data identifier</param>
            <param name="dataStream">the stream into which the custom data is written</param>
            <returns>True if data was found, false otherwise.</returns>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.SetStream(System.Guid,System.IO.Stream,System.Int32)">
            <summary>Stores custom data, reading it from a stream.</summary>
            <param name="dataID">the data identifier</param>
            <param name="dataStream">the stream from which the custom data is read</param>
            <param name="cbData">the number of bytes to read from the stream</param>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.GetBytes(System.Guid)">
            <summary>Retrieves custom data, returning it as an array of bytes.</summary>
            <param name="dataID">the data identifier</param>
            <returns>An array of bytes or null if data is not found.</returns>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.SetBytes(System.Guid,System.Byte[])">
            <summary>Stores custom data, reading it from an array of bytes.</summary>
            <param name="dataID">the data identifier</param>
            <param name="data">the array of bytes to store</param>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.SetBytes(System.Guid,System.Byte[],System.Int32,System.Int32)">
            <summary>Stores custom data, reading it from a subset of an array of bytes.</summary>
            <param name="dataID">the data identifier</param>
            <param name="data">the array of bytes to store</param>
            <param name="index">the zero-based index of the first byte in the array to store</param>
            <param name="count">the number of bytes from the array to store</param>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.GetObject(System.Guid)">
            <summary>Retrieves custom data, returning it as a deserialized object.</summary>
            <param name="dataID">the data identifier</param>
            <returns>A deserialized object or null if data is not found.</returns>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.SetObject(System.Guid,System.Object)">
            <summary>Stores custom data using a serializable object.</summary>
            <param name="dataID">the data identifier</param>
            <param name="obj">the serializable object to store</param>
        </member>
        <member name="M:Sony.Vegas.CustomDataContainer.DeleteData(System.Guid)">
            <summary>Deletes any custom data associated with the given identifier.</summary>
            <param name="dataID">the data identifier</param>
        </member>
        <member name="T:Sony.Vegas.EffectPreset">
            <summary>Represents a set of predefined parameter values for an effect key frame.</summary>
        </member>
        <member name="M:Sony.Vegas.EffectPreset.ToString">
            <summary>Describe the preset as a string.</summary>
        </member>
        <member name="P:Sony.Vegas.EffectPreset.Name">
            <summary>Get the name of the preset.</summary>
        </member>
        <member name="P:Sony.Vegas.EffectPreset.Index">
            <summary>Get the list index of the preset.</summary>
        </member>
        <member name="T:Sony.Vegas.EffectPresets">
            <summary>Collection of parameter presets for an effect.</summary>
        </member>
        <member name="P:Sony.Vegas.EffectPresets.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.EffectPresets.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="T:Sony.Vegas.PlugInNode">
            <summary>Represents a node in the hierarchy of plug-in effects, transitions, and generators.</summary>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.GetHashCode">
            <summary>Serves as a hash function for PlugInNode objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Take.</summary>
            <param name="obj">Object to compare with the current Take.</param>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.op_Equality(Sony.Vegas.PlugInNode,Sony.Vegas.PlugInNode)">
            <summary>Determines whether the specified PlugInNode objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.op_Inequality(Sony.Vegas.PlugInNode,Sony.Vegas.PlugInNode)">
            <summary>Determines whether the specified PlugInNode objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.GetChild(System.Int32)">
            <summary>Get the nth child of this node.</summary>
            <param name="index">index of child node</param>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.GetChildByName(System.String)">
            <summary>Get a child node by name.</summary>
            <param name="name">name of child node</param>
        </member>
        <member name="M:Sony.Vegas.PlugInNode.GetChildByClassID(System.Guid)">
            <summary>Get a child node by class id Guid.</summary>
            <param name="classID">Class ID Guid of child node</param>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.Name">
            <summary>Get the name of the plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.ClassID">
            <summary>Get the class identifier for the plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsVideo">
            <summary>Indicates whether or the the plug-in operates on video data.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsAudio">
            <summary>Indicates whether or the the plug-in operates on audio data.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsContainer">
            <summary>Indicates whether or the the node contains children.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsReadOnly">
            <summary>Indicates whether or the the node is read only.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.CanCreateSubnodes">
            <summary>Indicates whether or the the node can add child nodes.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsDisabled">
            <summary>Indicates whether or the the plug-in is disabled.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsPackage">
            <summary>Indicates whether or the the plug-in node is a package of other plug-ins.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.IsAutomatable">
            <summary>Indicates whether or the the plug-in is automatable.</summary>
        </member>
        <member name="P:Sony.Vegas.PlugInNode.Presets">
            <summary>Get the collection of effect presets for this plug-in node.</summary>
        </member>
        <member name="T:Sony.Vegas.RenderTemplate">
            <summary>Represents a render template.</summary>
        </member>
        <member name="M:Sony.Vegas.RenderTemplate.IsValid">
            <summary>Indicates whether the render template is valid.</summary>
        </member>
        <member name="M:Sony.Vegas.RenderTemplate.ToString">
            <summary>Returns a string representation the render template (same as Name property).</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.Index">
            <summary>Get the list index of this render template or -1 if it is not a list member.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.TemplateGuid">
            <summary>Get the unique guid associated with this render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.Name">
            <summary>Get the name of the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.Description">
            <summary>Get the description of the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.Notes">
            <summary>Get the notes of the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.VideoStreamCount">
            <summary>Get the number of video streams produced by the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.VideoDataRate">
            <summary>Get the average data rate of the encoded video in bytes per second.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.AudioStreamCount">
            <summary>Get the number of audio streams produced by the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.AudioChannelCount">
            <summary>Get the audio channel count produced by the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.AudioChannelFlags">
            <summary>Get the audio channel flags (speaker positions) produced by the render template.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplate.FileExtensions">
            <summary>Get the file extensions for the set of files this render template will produce.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioChannelFlags">
            <summary>Enumeration of audio channel flags (speaker positions).</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerFrontLeft">
            <summary>left front speaker (also used to indicate mono)</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerFrontRight">
            <summary>right front speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerFrontCenter">
            <summary>center front speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerLowFrequency">
            <summary>low frequecy speaker (subwoofer)</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerBackLeft">
            <summary>left back speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerBackRight">
            <summary>right back speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerFrontLeftOfCenter">
            <summary>center left front speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerFrontRightOfCenter">
            <summary>center right front speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerBackCenter">
            <summary>back-center speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerSideLeft">
            <summary>left side speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerSideRight">
            <summary>right side speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopCenter">
            <summary>center top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopFrontLeft">
            <summary>left front top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopFrontCenter">
            <summary>center front top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopFrontRight">
            <summary>right front top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopBackLeft">
            <summary>left back top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopBackCenter">
            <summary>center back top speaker</summary>
        </member>
        <member name="F:Sony.Vegas.AudioChannelFlags.SpeakerTopBackRight">
            <summary>right back top speaker</summary>
        </member>
        <member name="T:Sony.Vegas.RenderTemplates">
            <summary>Collection of templates for a render plug-in.</summary>
        </member>
        <member name="M:Sony.Vegas.RenderTemplates.FindByName(System.String)">
            <summary>Finds a render template by name.</summary>
            <param name="templateName">the name of the render template to find.</param>
        </member>
        <member name="M:Sony.Vegas.RenderTemplates.Refresh">
            <summary>Refresh the list of render templates.</summary>
        </member>
        <member name="M:Sony.Vegas.RenderTemplates.FindByGuid(System.Guid)">
            <summary>Finds a render template by GUID.</summary>
            <param name="presetGUID">the GUID of the render template to find.</param>
        </member>
        <member name="P:Sony.Vegas.RenderTemplates.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderTemplates.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="T:Sony.Vegas.Renderer">
            <summary>Represents a render plug-in.</summary>
        </member>
        <member name="M:Sony.Vegas.Renderer.ToString">
            <summary>Combines the FileTypeName and FileExtension strings.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.Name">
            <summary>Get the name of the render plug-in (same as FileTypeName).</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.FileTypeName">
            <summary>Get the name of the file type created by the render plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.FileExtension">
            <summary>Get the default file extension associated with the render plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.FileExtensions">
            <summary>Get all of the file extensions associated with the render plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.Templates">
            <summary>Get the collection of render templates for the render plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.SupportsMultistream">
            <summary>Get a value that indicates whether the renderer supports multiple media streams.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.SupportsMarkers">
            <summary>Get a value that indicates whether the renderer supports media markers and/or regions.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.SupportsCommands">
            <summary>Get a value that indicates whether the renderer supports command markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderer.SupportsMultichannel">
            <summary>Get a value that indicates whether the renderer supports more than 2 audio channels per stream.</summary>
        </member>
        <member name="T:Sony.Vegas.Renderers">
            <summary>Collection of render plug-ins.</summary>
        </member>
        <member name="M:Sony.Vegas.Renderers.FindByName(System.String)">
            <summary>Finds a renderer by name.</summary>
            <param name="rendererName">the name of the renderer</param>
        </member>
        <member name="M:Sony.Vegas.Renderers.FindByClassID(System.Guid)">
            <summary>Finds a renderer by class id.</summary>
            <param name="classID">the class id of the renderer</param>
        </member>
        <member name="P:Sony.Vegas.Renderers.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.Renderers.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="T:Sony.Vegas.EnvelopePoint">
            <summary>Represents an envelope point.</summary>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.#ctor(Sony.Vegas.Timecode,System.Double,Sony.Vegas.CurveType)">
            <summary>Create a new envelope point.</summary>
            <param name="x">position of envelope point</param>
            <param name="y">value of envelope point</param>
            <param name="curveType">type of curve</param>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.#ctor(Sony.Vegas.Timecode,System.Double)">
            <summary>Create a new envelope point.</summary>
            <param name="x">position of envelope point</param>
            <param name="y">value of envelope point</param>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this EnvelopePoint.</summary>
            <param name="obj">Object to compare with this EnvelopePoint.</param>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.op_Equality(Sony.Vegas.EnvelopePoint,Sony.Vegas.EnvelopePoint)">
            <summary>Determines whether the specified EnvelopePoint
            objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.op_Inequality(Sony.Vegas.EnvelopePoint,Sony.Vegas.EnvelopePoint)">
            <summary>Determines whether the specified EnvelopePoint
            objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.GetHashCode">
            <summary>Serves as a hash function for EnvelopePoint objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoint.IsValid">
            <summary>Indicates whether the envelope point has been added.</summary>
        </member>
        <member name="P:Sony.Vegas.EnvelopePoint.Index">
            <summary>Get the list index of the envelope point.</summary>
        </member>
        <member name="P:Sony.Vegas.EnvelopePoint.X">
            <summary>Get or set the time-wise position of the envelope point.</summary>
        </member>
        <member name="P:Sony.Vegas.EnvelopePoint.Y">
            <summary>Get or set the value of the envelope point.</summary>
        </member>
        <member name="P:Sony.Vegas.EnvelopePoint.Curve">
            <summary>Get or set the type of curve following the envelope point.</summary>
        </member>
        <member name="P:Sony.Vegas.EnvelopePoint.MaxTransitionProgress">
            <summary>Get the maximum X value for a transition progress envelope point.</summary>
        </member>
        <member name="T:Sony.Vegas.EnvelopePoints">
            <summary>Collection of points in an envelope.</summary>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoints.Clear">
            <summary>Removes all but the first item from the collection.</summary>
        </member>
        <member name="M:Sony.Vegas.EnvelopePoints.GetPointAtX(Sony.Vegas.Timecode)">
            <summary>Find the envelope point at a given time.</summary>
            <param name="x">The position of the envelope point.</param>
            <returns>The envelope point at the specified time or null if not found.</returns>
        </member>
        <member name="T:Sony.Vegas.EnvelopeType">
            <summary>Enumeration of envelope types.</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Volume">
            <summary>audio track volume</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Pan">
            <summary>audio track pan / surround pan x position</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusA">
            <summary>send audio bus A</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusB">
            <summary>send audio bus B</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusC">
            <summary>send audio bus C</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusD">
            <summary>send audio bus D</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusE">
            <summary>send audio bus E</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusF">
            <summary>send audio bus F</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusG">
            <summary>send audio bus G</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusH">
            <summary>send audio bus H</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusI">
            <summary>send audio bus I</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusJ">
            <summary>send audio bus J</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusK">
            <summary>send audio bus K</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusL">
            <summary>send audio bus L</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusM">
            <summary>send audio bus M</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusN">
            <summary>send audio bus N</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusO">
            <summary>send audio bus O</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusP">
            <summary>send audio bus P</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusQ">
            <summary>send audio bus Q</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusR">
            <summary>send audio bus R</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusS">
            <summary>send audio bus S</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusT">
            <summary>send audio bus T</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusU">
            <summary>send audio bus U</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusV">
            <summary>send audio bus V</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusW">
            <summary>send audio bus W</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusX">
            <summary>send audio bus X</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusY">
            <summary>send audio bus Y</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.BusZ">
            <summary>send audio bus Z</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Composite">
            <summary>video track composite level</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FadeToColor">
            <summary>video track fade to color</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Mute">
            <summary>audio track mute</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.MotionBlurLength">
            <summary>video bus track motion blur length</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.VideoSupersampling">
            <summary>video bus track video super-sampling</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX1">
            <summary>send audio FX bus 1</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX2">
            <summary>send audio FX bus 2</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX3">
            <summary>send audio FX bus 3</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX4">
            <summary>send audio FX bus 4</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX5">
            <summary>send audio FX bus 5</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX6">
            <summary>send audio FX bus 6</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX7">
            <summary>send audio FX bus 7</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX8">
            <summary>send audio FX bus 8</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX9">
            <summary>send audio FX bus 9</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX10">
            <summary>send audio FX bus 10</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX11">
            <summary>send audio FX bus 11</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX12">
            <summary>send audio FX bus 12</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX13">
            <summary>send audio FX bus 13</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX14">
            <summary>send audio FX bus 14</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX15">
            <summary>send audio FX bus 15</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX16">
            <summary>send audio FX bus 16</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX17">
            <summary>send audio FX bus 17</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX18">
            <summary>send audio FX bus 18</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX19">
            <summary>send audio FX bus 19</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX20">
            <summary>send audio FX bus 20</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX21">
            <summary>send audio FX bus 21</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX22">
            <summary>send audio FX bus 22</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX23">
            <summary>send audio FX bus 23</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX24">
            <summary>send audio FX bus 24</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX25">
            <summary>send audio FX bus 25</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX26">
            <summary>send audio FX bus 26</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX27">
            <summary>send audio FX bus 27</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX28">
            <summary>send audio FX bus 28</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX29">
            <summary>send audio FX bus 29</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX30">
            <summary>send audio FX bus 30</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX31">
            <summary>send audio FX bus 31</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.FX32">
            <summary>send audio FX bus 32</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.PanY">
            <summary>surround pan y position</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.PanSmoothness">
            <summary>surround pan smoothness</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.PanCenter">
            <summary>surround pan center level</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.TransitionProgress">
            <summary>transition progress</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Fade">
            <summary>not used</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.Velocity">
            <summary>video event velocity</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.AutomationMin">
            <summary>minimum id for audio effect automation</summary>
        </member>
        <member name="F:Sony.Vegas.EnvelopeType.AutomationMax">
            <summary>maximum id for audio effect automation</summary>
        </member>
        <member name="T:Sony.Vegas.Envelope">
            <summary>Represents an envelope.</summary>
        </member>
        <member name="M:Sony.Vegas.Envelope.#ctor(Sony.Vegas.EnvelopeType)">
            <summary>Create a new envelope.</summary>
            <param name="type">type of envelope</param>
        </member>
        <member name="M:Sony.Vegas.Envelope.GetHashCode">
            <summary>Serves as a hash function for Envelope objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.Envelope.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this Envelope.</summary>
            <param name="that">Object to compare with this Envelope.</param>
        </member>
        <member name="M:Sony.Vegas.Envelope.op_Equality(Sony.Vegas.Envelope,Sony.Vegas.Envelope)">
            <summary>Determines whether the specified Envelope objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Envelope.op_Inequality(Sony.Vegas.Envelope,Sony.Vegas.Envelope)">
            <summary>Determines whether the specified Envelope objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Envelope.IsValid">
            <summary>Indicates whether the envelope has been added.</summary>
        </member>
        <member name="M:Sony.Vegas.Envelope.ValueAt(Sony.Vegas.Timecode)">
            <summary>Get the Y value of the envelope at the given position.</summary>
            <param name="position">X position for value returned</param>
        </member>
        <member name="P:Sony.Vegas.Envelope.Type">
            <summary>Get the type of envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Name">
            <summary>Get the name of the envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Index">
            <summary>Get the index of the envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Min">
            <summary>Get the minimum value for points in the envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Max">
            <summary>Get the maximum value for points in the envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Neutral">
            <summary>Get the neutral value for points in the envelope.</summary>
        </member>
        <member name="P:Sony.Vegas.Envelope.Points">
            <summary>Get the envelope's collection of points.</summary>
        </member>
        <member name="T:Sony.Vegas.Envelopes">
            <summary>Collection of envelopes.</summary>
        </member>
        <member name="M:Sony.Vegas.Envelopes.HasEnvelope(Sony.Vegas.EnvelopeType)">
            <summary>Indicates whether the collection contains an envelope of the given type.</summary>
            <param name="type">envelope type</param>
        </member>
        <member name="M:Sony.Vegas.Envelopes.FindByType(Sony.Vegas.EnvelopeType)">
            <summary>Finds the envelope of the given type.</summary>
            <param name="type">envelope type</param>
        </member>
        <member name="T:Sony.Vegas.Keyframe">
            <summary>Represents a video effect key frame.</summary>
        </member>
        <member name="M:Sony.Vegas.Keyframe.#ctor(Sony.Vegas.Timecode)">
            <summary>Create a new key frame.</summary>
            <param name="position">position of new key frame</param>
        </member>
        <member name="M:Sony.Vegas.Keyframe.IsValid">
            <summary>Indicates whether the key frame has been added to an effect.</summary>
        </member>
        <member name="P:Sony.Vegas.Keyframe.Effect">
            <summary>Get the effect associated with this key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.Keyframe.Index">
            <summary>Get the list index of this key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.Keyframe.Position">
            <summary>Get or set the position of this key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.Keyframe.Type">
            <summary>Get or set the interpolation type for this key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.Keyframe.Preset">
            <summary>Set the parameters preset for this key frame.</summary>
        </member>
        <member name="T:Sony.Vegas.Keyframes">
            <summary>Collection of effect key frames.</summary>
        </member>
        <member name="T:Sony.Vegas.Effect">
            <summary>Represents an instance of an effect, transitions, or generator.</summary>
        </member>
        <member name="M:Sony.Vegas.Effect.#ctor(Sony.Vegas.PlugInNode)">
            <summary>Create a new effect.</summary>
            <param name="plugIn">plug-in to use for the effect</param>
        </member>
        <member name="M:Sony.Vegas.Effect.IsValid">
            <summary>Indicates whether the effect has been added.</summary>
        </member>
        <member name="M:Sony.Vegas.Effect.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="that">Object to compare with the current object.</param>
        </member>
        <member name="M:Sony.Vegas.Effect.op_Equality(Sony.Vegas.Effect,Sony.Vegas.Effect)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Effect.op_Inequality(Sony.Vegas.Effect,Sony.Vegas.Effect)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Effect.GetHashCode">
            <summary>Serves as a hash function suitable for use in hashing
            algorithms and data structures like a hash table.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Index">
            <summary>Get the list index of this Effect.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.PlugIn">
            <summary>Get the effect's plug-in.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Description">
            <summary>Get the effect's plug-in description.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Bypass">
            <summary>Get or set whether the effect is bypassed.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.ApplyBeforePanCrop">
            <summary>Get or set whether the effect is applied prior to pan/crop operations (video events only).</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Keyframes">
            <summary>Get the collection of key frames for the effect.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Presets">
            <summary>Get the collection of effect presets.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.Preset">
            <summary>Set the preset for the first keyframe by name.</summary>
        </member>
        <member name="P:Sony.Vegas.Effect.CurrentPreset">
            <summary>Get or set the effect preset for the first key frame.</summary>
        </member>
        <member name="T:Sony.Vegas.Effects">
            <summary>Collection of audio or video effects.</summary>
        </member>
        <member name="M:Sony.Vegas.Effects.Insert(System.Int32,Sony.Vegas.Effect)">
            <summary>Inserts the Effect at the given index.</summary>
            <param name="index">zero-based index of inserted item</param>
            <param name="item">Effect to insert</param>
        </member>
        <member name="M:Sony.Vegas.Effects.Clear">
            <summary>Removes all items from the collection.</summary>
        </member>
        <member name="M:Sony.Vegas.Effects.AddEffect(Sony.Vegas.PlugInNode)">
            <summary>Add a new Effect to the collection using the given plug-in.</summary>
            <param name="plugIn">plug-in to use for the effect</param>
        </member>
        <member name="T:Sony.Vegas.MediaStream">
            <summary>Represents a media stream.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaStream.GetHashCode">
            <summary>Serves as a hash function for MediaStream objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaStream.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current MediaStream.</summary>
            <param name="that">Object to compare with the current MediaStream.</param>
        </member>
        <member name="M:Sony.Vegas.MediaStream.op_Equality(Sony.Vegas.MediaStream,Sony.Vegas.MediaStream)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaStream.op_Inequality(Sony.Vegas.MediaStream,Sony.Vegas.MediaStream)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="P:Sony.Vegas.MediaStream.Parent">
            <summary>Get the Media object that contains this stream.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaStream.MediaType">
            <summary>Get the stream's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaStream.Index">
            <summary>Get the list index of this media stream.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaStream.Offset">
            <summary>Get the start offset of the media stream.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaStream.Length">
            <summary>Get the length of the media stream.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioStream">
            <summary>Represents an audio stream.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.MediaType">
            <summary>Get the audio stream's media type (MediaType.Audio).</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.SampleRate">
            <summary>Get the audio stream's sample rate.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.BitDepth">
            <summary>Get the audio stream's bit depth.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.Channels">
            <summary>Get the audio stream's number of channels.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.Format">
            <summary>Get the audio stream's encoding format.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioStream.AverageDataRate">
            <summary>Get the audio stream's average data rate.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoStream">
            <summary>Represents a video stream.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.MediaType">
            <summary>Get the video stream's media type (MediaType.Video).</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.Width">
            <summary>Get the video stream's pixel width.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.Height">
            <summary>Get the video stream's pixel height.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.Size">
            <summary>Get or set the video stream's frame size.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.FrameRate">
            <summary>Get the video stream's frame rate.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.FieldOrder">
            <summary>Get or set the video stream's field order.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.PixelAspectRatio">
            <summary>Get or set the video stream's pixel aspect ratio.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.ColorDepth">
            <summary>Get the video stream's color depth.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.AlphaChannel">
            <summary>Get or set the video stream's alpha channel type.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.AverageDataRate">
            <summary>Get the video stream's average data rate.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.Format">
            <summary>Get the video stream's encoding format.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoStream.BackgroundColor">
            <summary>Get or set the video stream's background color.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaStreams">
            <summary>Collection of media streams.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaStreams.GetItemByMediaType(Sony.Vegas.MediaType,System.Int32)">
            <summary>Get the nth media stream of a given media type.</summary>
            <param name="type">media type of stream</param>
            <param name="index">type-wise zero-based index of media stream</param>
        </member>
        <member name="P:Sony.Vegas.MediaStreams.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaStreams.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="T:Sony.Vegas.Media">
            <summary>Represents a media file referenced by a Vegas project.</summary>
        </member>
        <member name="T:Sony.Vegas.IMediaBinNode">
            <summary>Implemented by media bin objects.</summary>
        </member>
        <member name="M:Sony.Vegas.IMediaBinNode.IsValid">
            <summary>Indicates whether the object has been added to the project.</summary>
        </member>
        <member name="P:Sony.Vegas.IMediaBinNode.NodeType">
            <summary>Get the type of media bin object.</summary>
        </member>
        <member name="P:Sony.Vegas.IMediaBinNode.NodeID">
            <summary>Get media bin identifier.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.#ctor(System.String)">
            <summary>Create a new media file reference.</summary>
            <param name="path">full path of media file</param>
        </member>
        <member name="M:Sony.Vegas.Media.#ctor(Sony.Vegas.PlugInNode)">
            <summary>Create a media reference based on a generator plug-in.</summary>
            <param name="generator">generator plug-in to use</param>
        </member>
        <member name="M:Sony.Vegas.Media.#ctor(Sony.Vegas.PlugInNode,System.String)">
            <summary>Create a media reference based on a generator plug-in and preset.</summary>
            <param name="generator">generator plug-in to use</param>
            <param name="presetName">name of plug-in preset to use</param>
        </member>
        <member name="M:Sony.Vegas.Media.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Media.</summary>
            <param name="that">Object to compare with the current Media.</param>
        </member>
        <member name="M:Sony.Vegas.Media.GetHashCode">
            <summary>Serves as a hash function for Media objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.op_Equality(Sony.Vegas.Media,Sony.Vegas.Media)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Media.op_Inequality(Sony.Vegas.Media,Sony.Vegas.Media)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Media.IsValid">
            <summary>Indicates if the media file is valid.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.IsOffline">
            <summary>Indicates if the media is offline.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.CanRecapture">
            <summary>Indicates if the media can be recaptured.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.GetVideoStreamByIndex(System.Int32)">
            <summary>Get the nth VideoStream in the media's collection of stream.</summary>
            <param name="index">The type-wise zero-based index of the video stream.</param>
            <returns>The nth VideoStream object or null if not found.</returns>
        </member>
        <member name="M:Sony.Vegas.Media.GetAudioStreamByIndex(System.Int32)">
            <summary>Get the nth AudioStream in the media's collection of stream.</summary>
            <param name="index">The type-wise zero-based index of the audio stream.</param>
            <returns>The nth AudioStream object or null if not found.</returns>
        </member>
        <member name="M:Sony.Vegas.Media.IsGenerated">
            <summary>Indicates if the media is generated by a plug-in.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.IsImageSequence">
            <summary>Indicates if the media is an image sequence.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.IsSubclip">
            <summary>Indicates if the media is a sub-clip.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.StreamCount(Sony.Vegas.MediaType)">
            <summary>Get the number of streams of a particular media type.</summary>
            <param name="type">media type of streams to count</param>
        </member>
        <member name="M:Sony.Vegas.Media.HasAudio">
            <summary>Indicates if the media contains audio streams.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.HasVideo">
            <summary>Indicates if the media contains video streams.</summary>
        </member>
        <member name="M:Sony.Vegas.Media.CreateOfflineStream(Sony.Vegas.MediaType)">
            <summary>Creates a place-holder MediaStream and adds it to this Media's Streams (offline media only).</summary>
            <param name="type">media type of stream</param>
        </member>
        <member name="M:Sony.Vegas.Media.ReplaceWith(Sony.Vegas.Media)">
            <summary>Replace all references to this media object with refernces to another.</summary>
            <param name="other">replacement media object</param>
        </member>
        <member name="P:Sony.Vegas.Media.NodeType">
            <summary>Get the media bin type for this object.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.NodeID">
            <summary>Get the media bin node identifier for this object.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Streams">
            <summary>Get the collection of media streams.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Effects">
            <summary>Get the collection of effects associated with the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.FilePath">
            <summary>Get the full path of the media file.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Generator">
            <summary>Get the effect object for generated media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.KeyString">
            <summary>Get the key String for generated media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.UseCustomTimecode">
            <summary>Get or set whether custom time code is used for the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.TimecodeIn">
            <summary>Get or set the start time code for the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.TimecodeOut">
            <summary>Get the end time code for the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Length">
            <summary>Get or set the length of the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.RulerFormat">
            <summary>Get or set the ruler format used to represent the media's time code.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Comment">
            <summary>Get or set the comment for the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Title">
            <summary>Get the title for the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.TapeName">
            <summary>Get or set the tape name associated with the media.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.RecordedDateTime">
            <summary>Get the date and time when the media was recorded or DateTime.MinValue if not available.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Rating">
            <summary>Get the video capture rating for the media or null if not available.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.VideoCaptureComment">
            <summary>Get the video capture comment for the media or null if not available.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.AverageDataRate">
            <summary>Get the average total data rate in bytes per second.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.UseCount">
            <summary>Get the number of references to the media in the project.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Markers">
            <summary>Get the list of markers associated with this Media object.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.Regions">
            <summary>Get the collection of regions associated with this Media object.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.CommandMarkers">
            <summary>Get the collection of command markers associated with this Media object.</summary>
        </member>
        <member name="P:Sony.Vegas.Media.CustomData">
            <summary>Gets the container for custom data associated with the media.</summary>
        </member>
        <member name="T:Sony.Vegas.Subclip">
            <summary>Represents a subclip of a media file.</summary>
        </member>
        <member name="M:Sony.Vegas.Subclip.#ctor(System.String,Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.Boolean,System.String)">
            <summary>Create a new media subclip.</summary>
            <param name="path">full path of source media file</param>
            <param name="start">start offset in source media</param>
            <param name="length">length of subclip</param>
            <param name="reverse">whether the subclip is reversed</param>
            <param name="displayName">display name of subclip</param>
        </member>
        <member name="M:Sony.Vegas.Subclip.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Subclip.</summary>
            <param name="obj">Object to compare with the current Subclip.</param>
        </member>
        <member name="M:Sony.Vegas.Subclip.GetHashCode">
            <summary>Serves as a hash function for Subclip objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.Subclip.op_Equality(Sony.Vegas.Subclip,Sony.Vegas.Subclip)">
            <summary>Determines whether the specified Subclip
            objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Subclip.op_Inequality(Sony.Vegas.Subclip,Sony.Vegas.Subclip)">
            <summary>Determines whether the specified Subclip
            objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="P:Sony.Vegas.Subclip.ParentMedia">
            <summary>Get the media object from which a subclip is derived.</summary>
        </member>
        <member name="P:Sony.Vegas.Subclip.Start">
            <summary>Get the start offset of a subclip.</summary>
        </member>
        <member name="P:Sony.Vegas.Subclip.IsReversed">
            <summary>Get a value indicating whether a subclip is reversed.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaPool">
            <summary>Collection of media used in a project.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPool.CopyTo(System.Array,System.Int32)">
            <summary>Copies the items in the collection to an array.</summary>
            <param name="array">destination array of media pool items</param>
            <param name="index">start index for items in the array</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.Add(System.Object,System.Object)">
            <summary>not supported (use the AddMedia methods)</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPool.AddMedia(System.String)">
            <summary>Creates and adds a media object to the project media pool.</summary>
            <param name="path">full path of media file</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.AddMedia(System.String,System.Boolean)">
            <summary>Creates and adds a media object to the project media pool.</summary>
            <param name="path">full path of media file</param>
            <param name="addToSelectedBin">whether to add the media to the selected media bin</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.AddImageSequence(System.String,System.Int32,System.Double)">
            <summary>Creates and adds an image sequence to the project media pool.</summary>
            <param name="path">full path of the fisrt image in the sequence</param>
            <param name="imageCount">number of image files in the sequence</param>
            <param name="fps">frame rate of the image sequence</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.AddImageSequence(System.String,System.Int32,System.Double,System.Boolean)">
            <summary>Creates and adds an image sequence to the project media pool.</summary>
            <param name="path">full path of the fisrt image in the sequence</param>
            <param name="imageCount">number of image files in the sequence</param>
            <param name="fps">frame rate of the image sequence</param>
            <param name="addToSelectedBin">whether to add the media to the selected media bin</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.Clear">
            <summary>not supported</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPool.Contains(System.Object)">
            <summary>Indicates whether the given object is contained in the media pool.</summary>
            <param name="key">full path of media file</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.GetEnumerator">
            <summary>Get a new enumerator for the media pool.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPool.Remove(System.Object)">
            <summary>Remove the given media object from the pool.</summary>
            <param name="key">full path of media file</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.RemoveUnusedMedia">
            <summary>Remove all unused Media objects from the pool.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPool.Find(System.String)">
            <summary>Find a media object whose file path is the given string.</summary>
            <param name="path">full path of media file or display name of generated media</param>
        </member>
        <member name="M:Sony.Vegas.MediaPool.GetSelectedMedia">
            <summary>Get an array containing the Media objects that are selected in the Project Media window.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.Count">
            <summary>Get the number of media objects in the collection.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.IsSynchronized">
            <summary>Indicates whether access to the collection is thread safe.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.SyncRoot">
            <summary>Get the object that can be used to to synchronize access to the collection.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.IsFixedSize">
            <summary>Indicates whether the collection has a fixed size.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.IsReadOnly">
            <summary>Indicates whether the collection is read only.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.Item(System.Object)">
            <summary>Get a media object by name (file path).</summary>
            <param name="key">full path of media file</param>
            <returns>The media object with the given name or null if not found.</returns>
        </member>
        <member name="P:Sony.Vegas.MediaPool.Keys">
            <summary>not supported</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.Values">
            <summary>not supported</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPool.RootMediaBin">
            <summary>Get the top level media bin.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaPoolEnumerator">
            <summary>Enumerator of media referenced by a project.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPoolEnumerator.MoveNext">
            <summary>Move to the next object in the enumeration.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaPoolEnumerator.Reset">
            <summary>Reset the enumeration.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPoolEnumerator.Current">
            <summary>Get the current media object in the enumeration.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPoolEnumerator.Entry">
            <summary>Get the dictionary entry for the current item.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPoolEnumerator.Key">
            <summary>Get the key string (file path) of the current item.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaPoolEnumerator.Value">
            <summary>Get the current media object in the enumeration.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaBin">
            <summary>Represents a node in the hierarchy of media bins.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaBin.#ctor(System.String)">
            <summary>Create a new media bin.</summary>
            <param name="name">name of new media bin</param>
        </member>
        <member name="M:Sony.Vegas.MediaBin.IsValid">
            <summary>Indicates whether the media bin has been added to the project.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaBin.IsRoot">
            <summary>Indicates whether the media bin is the top-level bin.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaBin.NodeType">
            <summary>Get the media bin type for this object.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaBin.NodeID">
            <summary>Get the media bin node identifier for this object.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaBin.Name">
            <summary>Get or set the name of the media bin.</summary>
        </member>
        <member name="P:Sony.Vegas.MediaBin.Parent">
            <summary>Get the parent of this media bin.</summary>
        </member>
        <member name="T:Sony.Vegas.Take">
            <summary>Represents a take for an event.</summary>
        </member>
        <member name="M:Sony.Vegas.Take.#ctor(Sony.Vegas.MediaStream,System.Boolean,System.String)">
            <summary>Creates a new take.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
            <param name="makeActive">A value that indicates whether the new take should be active.</param>
            <param name="name">The name of the new take.</param>
        </member>
        <member name="M:Sony.Vegas.Take.#ctor(Sony.Vegas.MediaStream,System.Boolean)">
            <summary>Creates a new take.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
            <param name="makeActive">A value that indicates whether the new take should be active.</param>
        </member>
        <member name="M:Sony.Vegas.Take.#ctor(Sony.Vegas.MediaStream)">
            <summary>Creates a new take.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
        </member>
        <member name="M:Sony.Vegas.Take.IsValid">
            <summary>Indicates whether the take has been added to an event.</summary>
        </member>
        <member name="M:Sony.Vegas.Take.GetHashCode">
            <summary>Serves as a hash function for Take objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.Take.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Take.</summary>
            <param name="obj">Object to compare with the current Take.</param>
        </member>
        <member name="M:Sony.Vegas.Take.op_Equality(Sony.Vegas.Take,Sony.Vegas.Take)">
            <summary>Determines whether the specified Take objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Take.op_Inequality(Sony.Vegas.Take,Sony.Vegas.Take)">
            <summary>Determines whether the specified Take objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Take.SetAudioChannels(System.Int32,System.Int32)">
            <summary>Set the index and number of audio channels used for the take (valid only for audio streams with 3 or more channels).</summary>
            <param name="firstChannelIndex">Zero-based index of the first audio channel.</param>
            <param name="channelCount">Number of audio channels (1 or 2).</param>
        </member>
        <member name="P:Sony.Vegas.Take.Index">
            <summary>Get the list index of the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.Media">
            <summary>Get the media object associated with the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.MediaStream">
            <summary>Get the media stream object associated with the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.MediaPath">
            <summary>Get the path of the media file associated with the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.Name">
            <summary>Get or set the name of the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.StreamIndex">
            <summary>Get the index of the media stream associated with the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.Offset">
            <summary>Get or set the start time of the take's media stream.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.Length">
            <summary>Get the length of the take's media stream.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.AvailableLength">
            <summary>Get the length of time available in the take's media stream.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.IsActive">
            <summary>Indicates whether or not the take is active.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.FirstAudioChannelIndex">
            <summary>Get the zero-based index of the first audio stream channel used for the take.</summary>
        </member>
        <member name="P:Sony.Vegas.Take.AudioChannelCount">
            <summary>Get the number of audio channels used for the take.</summary>
        </member>
        <member name="T:Sony.Vegas.Takes">
            <summary>Collection of takes associated with an event.</summary>
        </member>
        <member name="T:Sony.Vegas.Fade">
            <summary>Represents the fade (in or out) of an event.</summary>
        </member>
        <member name="M:Sony.Vegas.Fade.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current Fade.</summary>
            <param name="that">Object to compare with the current Fade.</param>
        </member>
        <member name="M:Sony.Vegas.Fade.GetHashCode">
            <summary>Serves as a hash function for Fade objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.Fade.op_Equality(Sony.Vegas.Fade,Sony.Vegas.Fade)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Fade.op_Inequality(Sony.Vegas.Fade,Sony.Vegas.Fade)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Fade.RemoveTransition">
            <summary>Remove any transition effect used in the fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.Length">
            <summary>Get or set the length of the fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.Curve">
            <summary>Get or set the type of curve of the fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.ReciprocalCurve">
            <summary>Get or set the type of curve of the inverse fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.Gain">
            <summary>Get or set the peak gain of the fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.Transition">
            <summary>Get or set the transition effect used in the fade.</summary>
        </member>
        <member name="P:Sony.Vegas.Fade.Envelopes">
            <summary>Get the collection of envelopes assiciated with this Fade object.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoMotion">
            <summary>Represents the motion of a video event.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotion.ScaleToFill">
            <summary>Get or set whether to scale the video to fill the output.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotion.Keyframes">
            <summary>Get the collection of video motion key frames.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoMotionVertex">
            <summary>Represents a vertex used in video motion key frames.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoMotionVertex.#ctor(System.Single,System.Single)">
            <summary>Create a new video motion vertex.</summary>
            <param name="x">x coordinate</param>
            <param name="y">y coordinate</param>
        </member>
        <member name="M:Sony.Vegas.VideoMotionVertex.ToString">
            <summary>Converts the vertex to a string for display.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionVertex.X">
            <summary>Get or set the x (horizontal) coordinate.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionVertex.Y">
            <summary>Get or set the y (horizontal) coordinate.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoMotionBounds">
            <summary>Represents a 4 sided bounds polygon used in video motion key frames.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoMotionBounds.#ctor(Sony.Vegas.VideoMotionVertex,Sony.Vegas.VideoMotionVertex,Sony.Vegas.VideoMotionVertex,Sony.Vegas.VideoMotionVertex)">
            <summary>Create a new video motion bounds polygon.</summary>
            <param name="topLeft">top left vertex</param>
            <param name="topRight">top right vertex</param>
            <param name="bottomRight">bottom right vertex</param>
            <param name="bottomLeft">bottom left vertex</param>
        </member>
        <member name="M:Sony.Vegas.VideoMotionBounds.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Create a new video motion bounds polygon.</summary>
            <param name="topLeftX">X coordinate of top left vertex</param>
            <param name="topLeftY">Y coordinate of top left vertex</param>
            <param name="topRightX">X coordinate of top right vertex</param>
            <param name="topRightY">Y coordinate of top right vertex</param>
            <param name="bottomRightX">X coordinate of bottom right vertex</param>
            <param name="bottomRightY">Y coordinate of bottom right vertex</param>
            <param name="bottomLeftX">X coordinate of bottom left vertex</param>
            <param name="bottomLeftY">Y coordinate of bottom left vertex</param>
        </member>
        <member name="P:Sony.Vegas.VideoMotionBounds.TopLeft">
            <summary>Get or set the top left vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionBounds.TopRight">
            <summary>Get or set the top right vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionBounds.BottomRight">
            <summary>Get or set the bottom right vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionBounds.BottomLeft">
            <summary>Get or set the bottom left vertex.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoMotionKeyframe">
            <summary>Represents a key frame for video event motion parameters.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframe.#ctor(Sony.Vegas.Timecode)">
            <summary>Create a new video motion key frame.</summary>
            <param name="position">position of key frame</param>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframe.IsValid">
            <summary>Indicates whether key frame has been added.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframe.MoveBy(Sony.Vegas.VideoMotionVertex)">
            <summary>Translate all vertices by the given x and y distances</summary>
            <param name="delta">x and y distances</param>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframe.ScaleBy(Sony.Vegas.VideoMotionVertex)">
            <summary>Scale all vertices by the given x and y factors</summary>
            <param name="delta">x and y scale factors</param>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframe.RotateBy(System.Double)">
            <summary>Rotate all vertices by the given angle</summary>
            <param name="delta">angle of rotation (in radians)</param>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Position">
            <summary>Get or set the position of the video motion key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Smoothness">
            <summary>Get or set the smoothness of the video motion key frame.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.TopLeft">
            <summary>Get the top left vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.TopRight">
            <summary>Get the top right vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.BottomRight">
            <summary>Get the bottom right vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.BottomLeft">
            <summary>Get the bottom left vertex.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Center">
            <summary>Get or set the center of rotation.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Bounds">
            <summary>Get or set the video motion keyframe's bounds polygon.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Rotation">
            <summary>Get or set the rotation angle (in radians)</summary>
        </member>
        <member name="P:Sony.Vegas.VideoMotionKeyframe.Type">
            <summary>Get or set the interpolation type for this key frame.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoMotionKeyframes">
            <summary>Collection of video motion key frames for a video event.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoMotionKeyframes.Clear">
            <summary>Removes all but the first item from the collection</summary>
        </member>
        <member name="T:Sony.Vegas.TrackMotion">
            <summary>Provides access to video track motion data.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackMotion.InsertMotionKeyframe(Sony.Vegas.Timecode)">
            <summary>Inserts a track motion (position) keyframe at the specified time.</summary>
            <param name="position">The point on the timeline where the keyframe is inserted.</param>
            <returns>The new keyframe.</returns>
        </member>
        <member name="M:Sony.Vegas.TrackMotion.InsertShadowKeyframe(Sony.Vegas.Timecode)">
            <summary>Inserts a track shadow keyframe at the specified time.</summary>
            <param name="position">The point on the timeline where the keyframe is inserted.</param>
            <returns>The new keyframe.</returns>
        </member>
        <member name="M:Sony.Vegas.TrackMotion.InsertGlowKeyframe(Sony.Vegas.Timecode)">
            <summary>Inserts a track glow keyframe at the specified time.</summary>
            <param name="position">The point on the timeline where the keyframe is inserted.</param>
            <returns>The new keyframe.</returns>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.ScaleFactors">
            <summary>Get the scale factors used to map keyframe data from stored units to display units.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.HasMotionData">
            <summary>Get a value that indicates whether the track contains motion data.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.MotionKeyframes">
            <summary>Get the list of track motion (position) keyframes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.HasShadowData">
            <summary>Get a value that indicates whether the track contains shadow data.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.ShadowEnabled">
            <summary>Get or set a value that indicates whether the track shadow effect is enabled.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.ShadowKeyframes">
            <summary>Get the list of track shadow keyframes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.HasGlowData">
            <summary>Get a value that indicates whether the track contains glow data.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.GlowEnabled">
            <summary>Get or set a value that indicates whether the track glow effect is enabled.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotion.GlowKeyframes">
            <summary>Get the list of track glow keyframes.</summary>
        </member>
        <member name="T:Sony.Vegas.BaseTrackMotionKeyframe">
            <summary>Base class for all track motion keyframes.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseTrackMotionKeyframe.IsValid">
            <summary>Indicates whether the track motion keyframe object is valid.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseTrackMotionKeyframe.GetHashCode">
            <summary>Serves as a hash function suitable for use in hashing
            algorithms and data structures like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseTrackMotionKeyframe.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="that">Object to compare with the current object.</param>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Index">
            <summary>Get the list index of the track motion keyframe.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Position">
            <summary>Get or set the timeline position of the track motion keyframe.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Smoothness">
            <summary>Get or set the interpolation smoothness of the track motion keyframe.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Type">
            <summary>Get or set the interpolation type of the track motion keyframe.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Selected">
            <summary>Get or set a value that indicates whether the track motion keyframe is selected.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.PositionX">
            <summary>Get or set the x coordinate of the video position.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.PositionY">
            <summary>Get or set the y coordinate of the video position.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Width">
            <summary>Get or set the width of the video.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.Height">
            <summary>Get or set the height of the video.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.RotationZ">
            <summary>Get or set rotation of the video around the z axis.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.RotationOffsetX">
            <summary>Get or set the x offset of the axis of rotation.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.RotationOffsetY">
            <summary>Get or set the y offset of the axis of rotation.</summary>
        </member>
        <member name="P:Sony.Vegas.BaseTrackMotionKeyframe.OrientationZ">
            <summary>Get or set the orientation of the video around the z axis.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackMotionKeyframe">
            <summary>Represents positional track motion keyframes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.PositionZ">
            <summary>Get or set the z coordinate of the video position.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.Depth">
            <summary>Get or set the depth of the video.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.RotationX">
            <summary>Get or set rotation of the video around the x axis.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.RotationY">
            <summary>Get or set rotation of the video around the x axis.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.RotationOffsetZ">
            <summary>Get or set the z offset of the axis of rotation.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.OrientationX">
            <summary>Get or set the orientation of the video around the x axis.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackMotionKeyframe.OrientationY">
            <summary>Get or set the orientation of the video around the y axis.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackShadowKeyframe">
            <summary>Represents shadow effect track motion keyframes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackShadowKeyframe.Blur">
            <summary>Get or set the amount of blur for the track shadow effect.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackShadowKeyframe.Intensity">
            <summary>Get or set the intensity of the track shadow effect.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackShadowKeyframe.Color">
            <summary>Get or set the color of the track shadow effect.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackGlowKeyframe">
            <summary>Represents glow effect track motion keyframes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGlowKeyframe.Blur">
            <summary>Get or set the amount of blur for the track glow effect.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGlowKeyframe.Intensity">
            <summary>Get or set the intensity of the track glow effect.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGlowKeyframe.Color">
            <summary>Get or set the color of the track glow effect.</summary>
        </member>
        <member name="T:Sony.Vegas.BaseTrackMotionKeyframeList`1">
            <summary>Base class for lists of track motion keyframes.</summary>
        </member>
        <member name="M:Sony.Vegas.BaseTrackMotionKeyframeList`1.Clear">
            <summary>Removes all but the first item from the collection.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackMotionKeyframeList">
            <summary>Represents a list of positional track motion keyframes.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackShadowKeyframeList">
            <summary>Represents a list of shadow effect track motion keyframes.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackGlowKeyframeList">
            <summary>Represents a list of glow effect track motion keyframes.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackMotionScaleFactors">
            <summary>Represents the scale factors used when accessing the stored track motion keyframe data.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.X">
            <summary>The scale factor used when accessing x coordinates.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.Y">
            <summary>The scale factor used when accessing y coordinates.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.Z">
            <summary>The scale factor used when accessing z coordinates.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.W">
            <summary>The scale factor used when accessing width values.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.H">
            <summary>The scale factor used when accessing height values.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.D">
            <summary>The scale factor used when accessing depth values.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.A">
            <summary>The scale factor used when accessing angles.</summary>
        </member>
        <member name="F:Sony.Vegas.TrackMotionScaleFactors.P">
            <summary>The scale factor used when accessing percentages.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackMotionScaleFactors.Reset">
            <summary>Resets the track motion scale factors relative to the project's current video height and aspect ratio.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackMotionScaleFactors.Clear">
            <summary>Clears the track motion scale factors so that keyframe data is represented in native units.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackEvent">
            <summary>Represents a track event.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.GetHashCode">
            <summary>Serves as a hash function for TrackEvent objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current TrackEvent.</summary>
            <param name="that">Object to compare with the current TrackEvent.</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.op_Equality(Sony.Vegas.TrackEvent,Sony.Vegas.TrackEvent)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.op_Inequality(Sony.Vegas.TrackEvent,Sony.Vegas.TrackEvent)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.IsAudio">
            <summary>Indicates if the event's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.IsVideo">
            <summary>Indicates if the event's media type is video.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.IsValid">
            <summary>Indicates if the event has been added to a track.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.AddTake(Sony.Vegas.MediaStream)">
            <summary>Add a new take to the track event.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
            <returns>The new Take object.</returns>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.AddTake(Sony.Vegas.MediaStream,System.Boolean)">
            <summary>Add a new take to the track event.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
            <param name="makeActive">A value that indicates whether the new take should be active.</param>
            <returns>The new Take object.</returns>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.AddTake(Sony.Vegas.MediaStream,System.Boolean,System.String)">
            <summary>Add a new take to the track event.</summary>
            <param name="mediaStream">The media stream used in the new take.</param>
            <param name="makeActive">A value that indicates whether the new take should be active.</param>
            <param name="name">The name of the new take.</param>
            <returns>The new Take object.</returns>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.AdjustStartLength(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.Boolean)">
            <summary>Adjusts the event's start time and length.</summary>
            <param name="start">new start of event</param>
            <param name="length">new length of event</param>
            <param name="adjustTakes">whether to adjust the edges of the event's takes</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.Split(Sony.Vegas.Timecode)">
            <summary>Split the event at the given offset.</summary>
            <param name="offset">position of the split relative to the event start.</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.Copy(Sony.Vegas.Track,Sony.Vegas.Timecode)">
            <summary>Copy the event and place it in the given track at the given start time.</summary>
            <param name="destination">destination track of duplicate event.</param>
            <param name="startTime">start time of duplicate event.</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.AdjustPlaybackRate(System.Double,System.Boolean)">
            <summary>Adjusts the event's playback rate.</summary>
            <param name="rate">new playback rate</param>
            <param name="adjustStart">whether to alter the start or the end of the event's take</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.SyncByMove(System.Boolean)">
            <summary>Sync event by moving it.</summary>
            <param name="selected">Sync selection (target event is dominant media type for sync)</param>
        </member>
        <member name="M:Sony.Vegas.TrackEvent.SyncBySlip(System.Boolean)">
            <summary>Sync event by slipping media.</summary>
            <param name="selected">Sync selection (target event is dominant media type for sync)</param>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.MediaType">
            <summary>Get the event's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Track">
            <summary>Get or set the event's track.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Takes">
            <summary>Get the event's collection of takes.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.ActiveTake">
            <summary>Get or set the event's active take.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.FadeIn">
            <summary>Get an object that represents the event's fade in.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.FadeOut">
            <summary>Get an object that represents the event's fade out.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Index">
            <summary>Get the list index of the event.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Name">
            <summary>Get or set the event's name.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Start">
            <summary>Get or set the event's start time.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Length">
            <summary>Get or set the event's length.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.End">
            <summary>Get or set the event's end time.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.PlaybackRate">
            <summary>Get or set the event's playback rate.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Mute">
            <summary>Get or set whether the event is muted.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Locked">
            <summary>Get or set whether the event is locked.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Loop">
            <summary>Get or set whether the event is looped.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Selected">
            <summary>Get or set whether the event is selected.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.IsGrouped">
            <summary>Get whether the event is grouped with other events.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.Group">
            <summary>Get the group (if any) to which this event belongs.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.SyncOffset">
            <summary>Get the event's synchronization offset.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.SyncEvent">
            <summary>Get the event's synchronization event (the event it's SyncOffset is relative to).</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.SnapOffset">
            <summary>Get or set the snap offset for the event.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackEvent.CustomData">
            <summary>Gets the container for custom data associated with the event.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioEvent">
            <summary>Represents an audio event.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.String)">
            <summary>Creates a new audio event.</summary>
            <param name="start">start time of event</param>
            <param name="length">length of event</param>
            <param name="name">name of event</param>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Creates a new audio event.</summary>
            <param name="start">start time of event</param>
            <param name="length">length of event</param>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.#ctor(Sony.Vegas.Timecode)">
            <summary>Creates a new audio event.</summary>
            <param name="start">start time of event</param>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.#ctor">
            <summary>Creates a new audio event.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.IsAudio">
            <summary>Indicates if the event's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.IsVideo">
            <summary>Indicates if the event's media type is video.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.SetNormalize(System.Boolean,System.Double)">
            <summary>Set normalization values for the audio event.</summary>
            <param name="normalize">A value that indicates whether audio is normalized.</param>
            <param name="gain">The gain used to normalize the audio.</param>
        </member>
        <member name="M:Sony.Vegas.AudioEvent.RecalculateNorm">
            <summary>Recalculates the normalization gain of the audio event based on its peak values.</summary>
            <returns>The new gain value for audio normalization.</returns>
        </member>
        <member name="P:Sony.Vegas.AudioEvent.MediaType">
            <summary>Get the event's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioEvent.Normalize">
            <summary>Get or set whether to normalize audio data.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioEvent.NormalizeGain">
            <summary>Get or set the gain used to normalize the audio event.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioEvent.InvertPhase">
            <summary>Get or set whether to invert the phase of audio data.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioEvent.Channels">
            <summary>Get or set how audio channels are remapped.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoEvent">
            <summary>Represents an video event.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.String)">
            <summary>Creates a new video event.</summary>
            <param name="start">start time of event</param>
            <param name="length">length of event</param>
            <param name="name">name of event</param>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Creates a new video event.</summary>
            <param name="start">start time of event</param>
            <param name="length">length of event</param>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.#ctor(Sony.Vegas.Timecode)">
            <summary>Creates a new video event.</summary>
            <param name="start">start time of event</param>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.#ctor">
            <summary>Creates a new video event.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.IsAudio">
            <summary>Indicates if the event's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoEvent.IsVideo">
            <summary>Indicates if the event's media type is video.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.MediaType">
            <summary>Get the event's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.Envelopes">
            <summary>Get the video event's collection of envelopes.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.Effects">
            <summary>Get the video event's collection of effects.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.UnderSampleRate">
            <summary>Get or set the undersample rate for video events.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.MaintainAspectRatio">
            <summary>Get or set whether to maintain the video aspect ratio.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.ReduceInterlace">
            <summary>Get or set whether to reduce video interlacing.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.ResampleMode">
            <summary>Get or set the method by which video frames are resampled.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoEvent.VideoMotion">
            <summary>Get an object that represents the event's motion settings.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackEvents">
            <summary>Collection of track events.</summary>
        </member>
        <member name="T:Sony.Vegas.Track">
            <summary>Represents an audio or video track.</summary>
        </member>
        <member name="M:Sony.Vegas.Track.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <param name="that">Object to compare with the current object.</param>
        </member>
        <member name="M:Sony.Vegas.Track.op_Equality(Sony.Vegas.Track,Sony.Vegas.Track)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Track.op_Inequality(Sony.Vegas.Track,Sony.Vegas.Track)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Track.GetHashCode">
            <summary>Serves as a hash function suitable for use in hashing
            algorithms and data structures like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.Track.IsAudio">
            <summary>Indicates if the track's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.Track.IsVideo">
            <summary>Indicates if the track's media type is video.</summary>
        </member>
        <member name="M:Sony.Vegas.Track.IsValid">
            <summary>Indicates if the track has been added to the project.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.MediaType">
            <summary>Get the track's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Events">
            <summary>Get the collection of track events.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Envelopes">
            <summary>Get the collection of track envelopes.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Effects">
            <summary>Get the collection of track effects.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Name">
            <summary>Get or set the name of the track.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Length">
            <summary>Get the length of the track.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Index">
            <summary>Get the list index of the track.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.DisplayIndex">
            <summary>Get the display index of the track.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Solo">
            <summary>Get or set whether the track is soloed.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Mute">
            <summary>Get or set whether the track is muted.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.Selected">
            <summary>Get or set whether the track is selected.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.BusTrack">
            <summary>Get or set the bus to which the track is routed.</summary>
        </member>
        <member name="P:Sony.Vegas.Track.CustomData">
            <summary>Gets the container for custom data associated with the track.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioTrack">
            <summary>Represents an audio track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.#ctor(System.Int32,System.String)">
            <summary>Creates a new audio track.</summary>
            <param name="index">display index of new track</param>
            <param name="name">name of new track</param>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.#ctor(System.Int32)">
            <summary>Creates a new audio track.</summary>
            <param name="index">display index of new track</param>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.#ctor">
            <summary>Creates a new audio track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.IsAudio">
            <summary>Indicates if the track's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.IsVideo">
            <summary>Indicates if the track's media type is video.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.AddAudioEvent">
            <summary>Add a new audio event to the track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioTrack.AddAudioEvent(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Add a new audio event to the track.</summary>
            <param name="start">start time of the new event</param>
            <param name="length">length of the new event</param>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.MediaType">
            <summary>Get the track's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.InvertPhase">
            <summary>Get or set whether the track's audio is phase inverted.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.Volume">
            <summary>Get or set the volume gain value for the audio track.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.PanX">
            <summary>Get or set the track's left/right pan trim value.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.PanY">
            <summary>Get or set the track's front/back pan trim level (surround only).</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.PanCenter">
            <summary>Get or set the track's center pan trim level (surround only).</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.ArmRecord">
            <summary>Get whether the track is armed for recording.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioTrack.BusTrack">
            <summary>Get or set the audio bus to which the track is routed.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoTrack">
            <summary>Represents a video track.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.#ctor(System.Int32,System.String)">
            <summary>Creates a new video track.</summary>
            <param name="index">display index of new track</param>
            <param name="name">name of new track</param>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.#ctor(System.Int32)">
            <summary>Creates a new video track.</summary>
            <param name="index">display index of new track</param>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.#ctor">
            <summary>Creates a new video track.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.IsAudio">
            <summary>Indicates if the track's media type is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.IsVideo">
            <summary>Indicates if the track's media type is video.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.SetCompositeMode(Sony.Vegas.CompositeMode,System.Boolean)">
            <summary>Set the composite mode of the video track, optionally showing a dialog to warn if data will be lost.</summary>
            <param name="mode">the new composite mode</param>
            <param name="showWarningDialog">indicates whether to show a dialog that warns the user when data will be lost</param>
            <returns>True if the change was made or false if the user canceled the dialog.</returns>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.SetParentCompositeMode(Sony.Vegas.CompositeMode,System.Boolean)">
            <summary>Set the parent composite mode of the video track, optionally showing a dialog to warn if data will be lost.</summary>
            <param name="mode">the new composite mode</param>
            <param name="showWarningDialog">indicates whether to show a dialog that warns the user when data will be lost</param>
            <returns>True if the change was made or false if the user canceled the dialog.</returns>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.AddVideoEvent">
            <summary>Adds a new video event to the track.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoTrack.AddVideoEvent(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Adds a new video event to the track.</summary>
            <param name="start">the start time of the new event</param>
            <param name="length">the length of the new event</param>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.MediaType">
            <summary>Get the track's media type.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.TopFadeColor">
            <summary>Get or set the track's top fade color (video only).</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.BottomFadeColor">
            <summary>Get or set the track's bottom fade color (video only).</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.CompositeLevel">
            <summary>Get or set the composite level (opacity) of the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.CompositeMode">
            <summary>Get or set the composite mode of the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.ParentCompositeMode">
            <summary>Get or set the composite mode of the parent video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.CompositeNestingLevel">
            <summary>Get or set the composite nesting level of the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.IsCompositingChild">
            <summary>Get whether the video track is a compositing child of another video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.IsCompositingParent">
            <summary>Get whether the video track is a compositing parent of another video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.CompositeModeEffect">
            <summary>Get or set the compositing effect for the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.ParentCompositeModeEffect">
            <summary>Get or set the parent compositing effect for the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.BypassMotionBlur">
            <summary>Get or set whether motion blur is bypassed for the video track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoTrack.BusTrack">
            <summary>Get the video bus (to which all video tracks are routed).</summary>
        </member>
        <member name="T:Sony.Vegas.Tracks">
            <summary>Collection of tracks in a project.</summary>
        </member>
        <member name="T:Sony.Vegas.BusTracks">
            <summary>Collection of bus tracks.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTracks.Clear">
            <summary>Removes all bus tracks from the collection except the master audio and video bus.</summary>
        </member>
        <member name="T:Sony.Vegas.BusTrack">
            <summary>Represents a bus track.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTrack.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current BusTrack.</summary>
            <param name="that">Object to compare with the current BusTrack.</param>
        </member>
        <member name="M:Sony.Vegas.BusTrack.op_Equality(Sony.Vegas.BusTrack,Sony.Vegas.BusTrack)">
            <summary>Determines whether the specified objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.BusTrack.op_Inequality(Sony.Vegas.BusTrack,Sony.Vegas.BusTrack)">
            <summary>Determines whether the specified objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.BusTrack.GetHashCode">
            <summary>Serves as a hash function for BusTrack objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTrack.IsValid">
            <summary>Indicates whether the bus track has been added.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTrack.IsAudio">
            <summary>Indicates whether the media type of the bus track is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTrack.IsVideo">
            <summary>Indicates whether the bus track is the master video bus.</summary>
        </member>
        <member name="M:Sony.Vegas.BusTrack.IsMaster">
            <summary>Indicates whether the bus track is a master bus.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.MediaType">
            <summary>Get the media type of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.Index">
            <summary>Get the list index of this bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.Name">
            <summary>Get the name of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.Description">
            <summary>Get or set the description of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.Envelopes">
            <summary>Get the bus track's collection of envelopes.</summary>
        </member>
        <member name="P:Sony.Vegas.BusTrack.Effects">
            <summary>Get the bus track's collection of effects.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioBusTrack">
            <summary>Represents an audio bus track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.#ctor">
            <summary>Create a new audio bus track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current AudioBusTrack.</summary>
            <param name="obj">Object to compare with the current AudioBusTrack.</param>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.op_Equality(Sony.Vegas.AudioBusTrack,Sony.Vegas.AudioBusTrack)">
            <summary>Determines whether the specified AudioBusTrack
            objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.op_Inequality(Sony.Vegas.AudioBusTrack,Sony.Vegas.AudioBusTrack)">
            <summary>Determines whether the specified AudioBusTrack
            objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.GetHashCode">
            <summary>Serves as a hash function for AudioBusTrack objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.IsAudio">
            <summary>Indicates whether the media type of the bus track is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.IsVideo">
            <summary>Indicates whether the bus track is the master video bus.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioBusTrack.IsMaster">
            <summary>Indicates whether the audio bus track is the master bus.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.MediaType">
            <summary>Get the media type of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.Index">
            <summary>Get the list index of this bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.Name">
            <summary>Get the name of the audio bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.Description">
            <summary>Get or set the description of the audio bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.Solo">
            <summary>Get or set whether of not the bus track is soloed.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.Mute">
            <summary>Get or set whether of not the bus track is muted.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.PanType">
            <summary>Get or set the audio bus track pan type setting.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.MonoRenderEnabled">
            <summary>Get or set whether the mono downmix of this audio bus is included in multichannel
            renders.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.StereoRenderEnabled">
            <summary>Get or set whether the stereo mix of this audio bus is included in multichannel
            renders.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.SurroundRenderEnabled">
            <summary>Get or set whether the 5.1 surround mix of this audio bus is included in multichannel renders
            (5.1 master bus only). </summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.MonoRenderOrder">
            <summary>Get or set the order in which the mono downmix of this audio bus is included in multichannel
            renders.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.StereoRenderOrder">
            <summary>Get or set the order in which the stereo mix of this audio bus is included in multichannel
            renders.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioBusTrack.SurroundRenderOrder">
            <summary>Get or set the order in which the 5.1 surround mix of this audio bus is included in
            multichannel renders.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioFXBusTrack">
            <summary>Represents an assignable audio effect bus track.</summary>
        </member>
        <member name="M:Sony.Vegas.AudioFXBusTrack.#ctor(Sony.Vegas.PlugInNode)">
            <summary>Create a new assignable audio effect bus track.</summary>
            <param name="plugin">audio effect plugin associated with the bus track</param>
        </member>
        <member name="P:Sony.Vegas.AudioFXBusTrack.Effects">
            <summary>Get the assignable audio effect bus track's collection of effects.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoBusTrack">
            <summary>Represents a video bus track.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current VideoBusTrack.</summary>
            <param name="obj">Object to compare with the current VideoBusTrack.</param>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.op_Equality(Sony.Vegas.VideoBusTrack,Sony.Vegas.VideoBusTrack)">
            <summary>Determines whether the specified VideoBusTrack
            objects are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.op_Inequality(Sony.Vegas.VideoBusTrack,Sony.Vegas.VideoBusTrack)">
            <summary>Determines whether the specified VideoBusTrack
            objects are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.GetHashCode">
            <summary>Serves as a hash function for VideoBusTrack objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.IsAudio">
            <summary>Indicates whether the media type of the bus track is audio.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.IsVideo">
            <summary>Indicates whether the bus track is the master video bus.</summary>
        </member>
        <member name="M:Sony.Vegas.VideoBusTrack.IsMaster">
            <summary>Indicates whether the video bus track is a master bus.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.MediaType">
            <summary>Get the media type of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.Index">
            <summary>Get the list index of this bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.Name">
            <summary>Get the name of the bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.Description">
            <summary>Get the description of the video bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.TopFadeColor">
            <summary>Get or set the video bus track's top fade color.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.BottomFadeColor">
            <summary>Get or set the video bus track's bottom fade color.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoBusTrack.Bypass">
            <summary>Get or set whether the video bus track's effects and envelopes are bypassed.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackGroup">
            <summary>Represents a group of tracks.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackGroup.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to this track group.</summary>
            <param name="obj">Object to compare with the current track group.</param>
        </member>
        <member name="M:Sony.Vegas.TrackGroup.op_Equality(Sony.Vegas.TrackGroup,Sony.Vegas.TrackGroup)">
            <summary>Determines whether the specified track groups are equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackGroup.op_Inequality(Sony.Vegas.TrackGroup,Sony.Vegas.TrackGroup)">
            <summary>Determines whether the specified track groups are not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackGroup.GetHashCode">
            <summary>Serves as a hash function for track groups, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGroup.Name">
            <summary>Get or set the name of the track group.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGroup.Mute">
            <summary>Get or set whether every track in the group is muted.</summary>
        </member>
        <member name="P:Sony.Vegas.TrackGroup.Solo">
            <summary>Get or set whether every track in the group is soloed.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackGroups">
            <summary>Collection of track groups.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackEventGroup">
            <summary>Represents a group of track events.</summary>
        </member>
        <member name="M:Sony.Vegas.TrackEventGroup.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            the current TrackEventGroup.</summary>
            <param name="obj">Object to compare with the current TrackEventGroup.</param>
        </member>
        <member name="M:Sony.Vegas.TrackEventGroup.op_Equality(Sony.Vegas.TrackEventGroup,Sony.Vegas.TrackEventGroup)">
            <summary>Determines whether the specified TrackEventGroup objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackEventGroup.op_Inequality(Sony.Vegas.TrackEventGroup,Sony.Vegas.TrackEventGroup)">
            <summary>Determines whether the specified TrackEventGroup objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.TrackEventGroup.GetHashCode">
            <summary>Serves as a hash function for TrackEventGroup objects, suitable
            for use in hashing algorithms and data structures like a hash
            table.</summary>
        </member>
        <member name="T:Sony.Vegas.TrackEventGroups">
            <summary>Collection of track event groups.</summary>
        </member>
        <member name="T:Sony.Vegas.Marker">
            <summary>Represents a marker on the project's time line.</summary>
        </member>
        <member name="M:Sony.Vegas.Marker.#ctor(Sony.Vegas.Timecode)">
            <summary>Create a new marker</summary>
            <param name="position">position of new marker</param>
        </member>
        <member name="M:Sony.Vegas.Marker.#ctor(Sony.Vegas.Timecode,System.String)">
            <summary>Create a new marker.</summary>
            <param name="position">position of new marker</param>
            <param name="label">label of new marker</param>
        </member>
        <member name="M:Sony.Vegas.Marker.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this Marker.</summary>
            <param name="obj">Object to compare with this Marker.</param>
        </member>
        <member name="M:Sony.Vegas.Marker.op_Equality(Sony.Vegas.Marker,Sony.Vegas.Marker)">
            <summary>Determines whether the specified Marker objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Marker.op_Inequality(Sony.Vegas.Marker,Sony.Vegas.Marker)">
            <summary>Determines whether the specified Marker objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Marker.GetHashCode">
            <summary>Serves as a hash function for Marker objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.Marker.IsValid">
            <summary>Indicates whether the marker has been added.</summary>
        </member>
        <member name="P:Sony.Vegas.Marker.Position">
            <summary>Get or set the marker's position.</summary>
        </member>
        <member name="P:Sony.Vegas.Marker.Label">
            <summary>Get or set the marker's label.</summary>
        </member>
        <member name="T:Sony.Vegas.CDMarker">
            <summary>Represents a CD track index marker.</summary>
        </member>
        <member name="M:Sony.Vegas.CDMarker.#ctor(Sony.Vegas.Timecode)">
            <summary>Create a new CD track index marker.</summary>
            <param name="position">position of new CD marker</param>
        </member>
        <member name="M:Sony.Vegas.CDMarker.#ctor(Sony.Vegas.Timecode,System.String)">
            <summary>Create a new CD track index marker.</summary>
            <param name="position">position of new CD marker</param>
            <param name="label">label of new CD marker</param>
        </member>
        <member name="M:Sony.Vegas.CDMarker.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this CDMarker.</summary>
            <param name="obj">Object to compare with this CDMarker.</param>
        </member>
        <member name="M:Sony.Vegas.CDMarker.op_Equality(Sony.Vegas.CDMarker,Sony.Vegas.CDMarker)">
            <summary>Determines whether the specified CDMarker objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CDMarker.op_Inequality(Sony.Vegas.CDMarker,Sony.Vegas.CDMarker)">
            <summary>Determines whether the specified CDMarker objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CDMarker.GetHashCode">
            <summary>Serves as a hash function for CDMarker objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="T:Sony.Vegas.MarkerCommandType">
            <summary>Command marker types</summary>
        </member>
        <member name="M:Sony.Vegas.MarkerCommandType.#ctor(System.String)">
            <summary>Creates a new marker command type with the given command type.</summary>
            <param name="cmd">command type string</param>
        </member>
        <member name="M:Sony.Vegas.MarkerCommandType.ToString">
            <summary>Converts marker command type to its string representation.</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.URL">
            <summary>URL</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.Text">
            <summary>TEXT</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.WMClosedCaption">
            <summary>WMClosedCaption</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.WMWMTextBodytext">
            <summary>WMTextBodytext</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.WMTextHeadline">
            <summary>WMTextHeadline</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.Title">
            <summary>Title</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.Author">
            <summary>Author</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.Copyright">
            <summary>Copyright</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.HotSpotPlay">
            <summary>HotSpotPlay</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.HotSpotBrowse">
            <summary>HotSpotBrowse</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.HotSpotSeek">
            <summary>HotSpotSeek</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.ScottEOM">
            <summary>SCOTT EOM</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.ScottCueIn">
            <summary>SCOTT Cue In</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.CEA608CC1">
            <summary>CEA608CC1</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.CEA608CC2">
            <summary>CEA608CC2</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.CEA608CC3">
            <summary>CEA608CC3</summary>
        </member>
        <member name="F:Sony.Vegas.MarkerCommandType.CEA608CC4">
            <summary>CEA608CC4</summary>
        </member>
        <member name="T:Sony.Vegas.CommandMarker">
            <summary>Represents a command marker.</summary>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.#ctor(Sony.Vegas.Timecode)">
            <summary>Create a new command marker.</summary>
            <param name="position">position of new command marker</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.#ctor(Sony.Vegas.Timecode,Sony.Vegas.MarkerCommandType,System.String)">
            <summary>Create a new command marker.</summary>
            <param name="position">position of new command marker</param>
            <param name="cmd">type of new command marker</param>
            <param name="param">parameter of new command marker</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.#ctor(Sony.Vegas.Timecode,Sony.Vegas.MarkerCommandType,System.String,System.String)">
            <summary>Create a new command marker.</summary>
            <param name="position">position of new command marker</param>
            <param name="cmd">type of new command marker</param>
            <param name="param">parameter of new command marker</param>
            <param name="comment">comment of new command marker</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this CommandMarker.</summary>
            <param name="obj">Object to compare with this CommandMarker.</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.op_Equality(Sony.Vegas.CommandMarker,Sony.Vegas.CommandMarker)">
            <summary>Determines whether the specified CommandMarker objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.op_Inequality(Sony.Vegas.CommandMarker,Sony.Vegas.CommandMarker)">
            <summary>Determines whether the specified CommandMarker objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.GetHashCode">
            <summary>Serves as a hash function for CommandMarker objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="M:Sony.Vegas.CommandMarker.SetCommand(Sony.Vegas.MarkerCommandType,System.String)">
            <summary>Get the command marker's type and parameter.</summary>
            <param name="cmdType">type of command</param>
            <param name="param">command parameter</param>
        </member>
        <member name="P:Sony.Vegas.CommandMarker.Label">
            <summary>Get or set the command marker's comment (same as Comment property).</summary>
        </member>
        <member name="P:Sony.Vegas.CommandMarker.Comment">
            <summary>Get or set the command marker's comment.</summary>
        </member>
        <member name="P:Sony.Vegas.CommandMarker.CommandType">
            <summary>Get the command marker's type.</summary>
        </member>
        <member name="P:Sony.Vegas.CommandMarker.CommandParameter">
            <summary>Get or set the command marker's parameter.</summary>
        </member>
        <member name="T:Sony.Vegas.Region">
            <summary>Represents a region marker on the project time line.</summary>
        </member>
        <member name="M:Sony.Vegas.Region.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Create a new region marker.</summary>
            <param name="position">position of new region</param>
            <param name="length">length of new region</param>
        </member>
        <member name="M:Sony.Vegas.Region.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.String)">
            <summary>Create a new region marker.</summary>
            <param name="position">position of new region</param>
            <param name="length">length of new region</param>
            <param name="label">label of new region</param>
        </member>
        <member name="M:Sony.Vegas.Region.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this Region.</summary>
            <param name="obj">Object to compare with this Region.</param>
        </member>
        <member name="M:Sony.Vegas.Region.op_Equality(Sony.Vegas.Region,Sony.Vegas.Region)">
            <summary>Determines whether the specified Region objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Region.op_Inequality(Sony.Vegas.Region,Sony.Vegas.Region)">
            <summary>Determines whether the specified Region objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.Region.GetHashCode">
            <summary>Serves as a hash function for Region objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="P:Sony.Vegas.Region.Length">
            <summary>Get or set the region marker's length.</summary>
        </member>
        <member name="P:Sony.Vegas.Region.End">
            <summary>Get or set the region marker's end time.</summary>
        </member>
        <member name="T:Sony.Vegas.CDRegion">
            <summary>Represents a CD track region marker.</summary>
        </member>
        <member name="M:Sony.Vegas.CDRegion.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Create a new CD track region marker.</summary>
            <param name="position">position of new CD region</param>
            <param name="length">length of new CD region</param>
        </member>
        <member name="M:Sony.Vegas.CDRegion.#ctor(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.String)">
            <summary>Create a new CD track region marker.</summary>
            <param name="position">position of new CD region</param>
            <param name="length">length of new CD region</param>
            <param name="label">label of new CD region</param>
        </member>
        <member name="M:Sony.Vegas.CDRegion.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this CDRegion.</summary>
            <param name="obj">Object to compare with this CDRegion.</param>
        </member>
        <member name="M:Sony.Vegas.CDRegion.op_Equality(Sony.Vegas.CDRegion,Sony.Vegas.CDRegion)">
            <summary>Determines whether the specified CDRegion objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CDRegion.op_Inequality(Sony.Vegas.CDRegion,Sony.Vegas.CDRegion)">
            <summary>Determines whether the specified CDRegion objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.CDRegion.GetHashCode">
            <summary>Serves as a hash function for CDRegion objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaMarker">
            <summary>Represents a media marker.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaMarker.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this MediaMarker.</summary>
            <param name="obj">Object to compare with this MediaMarker.</param>
        </member>
        <member name="M:Sony.Vegas.MediaMarker.op_Equality(Sony.Vegas.MediaMarker,Sony.Vegas.MediaMarker)">
            <summary>Determines whether the specified MediaMarker objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaMarker.op_Inequality(Sony.Vegas.MediaMarker,Sony.Vegas.MediaMarker)">
            <summary>Determines whether the specified MediaMarker objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaMarker.GetHashCode">
            <summary>Serves as a hash function for MediaMarker objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaRegion">
            <summary>Represents a media region.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaRegion.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this MediaRegion.</summary>
            <param name="obj">Object to compare with this MediaRegion.</param>
        </member>
        <member name="M:Sony.Vegas.MediaRegion.op_Equality(Sony.Vegas.MediaRegion,Sony.Vegas.MediaRegion)">
            <summary>Determines whether the specified MediaRegion objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaRegion.op_Inequality(Sony.Vegas.MediaRegion,Sony.Vegas.MediaRegion)">
            <summary>Determines whether the specified MediaRegion objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaRegion.GetHashCode">
            <summary>Serves as a hash function for MediaRegion objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaCommandMarker">
            <summary>Represents a media command marker.</summary>
        </member>
        <member name="M:Sony.Vegas.MediaCommandMarker.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to
            this MediaCommandMarker.</summary>
            <param name="obj">Object to compare with this MediaCommandMarker.</param>
        </member>
        <member name="M:Sony.Vegas.MediaCommandMarker.op_Equality(Sony.Vegas.MediaCommandMarker,Sony.Vegas.MediaCommandMarker)">
            <summary>Determines whether the specified MediaCommandMarker objects are
            equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaCommandMarker.op_Inequality(Sony.Vegas.MediaCommandMarker,Sony.Vegas.MediaCommandMarker)">
            <summary>Determines whether the specified MediaCommandMarker objects are
            not equal.</summary>
            <param name="a">left hand side of operator</param>
            <param name="b">right hand side of operator</param>
        </member>
        <member name="M:Sony.Vegas.MediaCommandMarker.GetHashCode">
            <summary>Serves as a hash function for MediaCommandMarker objects,
            suitable for use in hashing algorithms and data structures
            like a hash table.</summary>
        </member>
        <member name="T:Sony.Vegas.MarkerList">
            <summary>List of Marker objects.</summary>
        </member>
        <member name="T:Sony.Vegas.RegionList">
            <summary>List of Region objects.</summary>
        </member>
        <member name="T:Sony.Vegas.CDMarkerList">
            <summary>List of CDMarker objects.</summary>
        </member>
        <member name="T:Sony.Vegas.CDRegionList">
            <summary>List of CDRegion objects.</summary>
        </member>
        <member name="T:Sony.Vegas.CommandMarkerList">
            <summary>List of CommandMarker objects.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaMarkerList">
            <summary>List of MediaMarker objects.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaRegionList">
            <summary>List of MediaRegion objects.</summary>
        </member>
        <member name="T:Sony.Vegas.MediaCommandMarkerList">
            <summary>List of MediaCommandMarker objects.</summary>
        </member>
        <member name="T:Sony.Vegas.VideoProperties">
            <summary>Base class for objects that represent video properties.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoProperties.Width">
            <summary>Get or set the pixel width.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoProperties.Height">
            <summary>Get or set the pixel height.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoProperties.FrameRate">
            <summary>Get or set the frame rate.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoProperties.FieldOrder">
            <summary>Get or set the field order.</summary>
        </member>
        <member name="P:Sony.Vegas.VideoProperties.PixelAspectRatio">
            <summary>Get or set the pixel aspect ratio.</summary>
        </member>
        <member name="T:Sony.Vegas.ProjectVideoProperties">
            <summary>Represents a project's video properties.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.Width">
            <summary>Get or set the pixel width.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.Height">
            <summary>Get or set the pixel height.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.FrameRate">
            <summary>Get or set the frame rate.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.FieldOrder">
            <summary>Get or set the field order.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.PixelAspectRatio">
            <summary>Get or set the pixel aspect ratio.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.OutputRotation">
            <summary>Get or set the project video output rotation setting.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.RenderQuality">
            <summary>Get or set the render quality.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.MotionBlurType">
            <summary>Get or set the motion blur type.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.DeinterlaceMethod">
            <summary>Get or set the deinterlace method.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.PrerenderedFilesFolder">
            <summary>Get or set the folder containing pre-rendered files.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectVideoProperties.PixelFormat">
            <summary>Get or set the pixel format used when rendering video for the project.</summary>
        </member>
        <member name="T:Sony.Vegas.PreviewVideoProperties">
            <summary>Represents a project's preview video properties.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.Width">
            <summary>Get the pixel width.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.Height">
            <summary>Get the pixel height.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.FrameRate">
            <summary>Get the frame rate.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.FieldOrder">
            <summary>Get the field order.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.PixelAspectRatio">
            <summary>Get the pixel aspect ratio.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.RenderQuality">
            <summary>Get or set the preview render quality.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.FullSize">
            <summary>Obsolete. Use PreviewSize property.</summary>
        </member>
        <member name="P:Sony.Vegas.PreviewVideoProperties.PreviewSize">
            <summary>Get or set the size at which video preview frames are rendered.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioProperties">
            <summary>Base class for objects that represent audio properties.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioProperties.SampleRate">
            <summary>Get or set the sample rate.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioProperties.BitDepth">
            <summary>Get or set the bit depth.</summary>
        </member>
        <member name="T:Sony.Vegas.ProjectAudioProperties">
            <summary>Represents a project's audio properties.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.SampleRate">
            <summary>Get or set the sample rate.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.BitDepth">
            <summary>Get or set the bit depth.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.MasterBusMode">
            <summary>Get or set the audio bus mode.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.ResampleQuality">
            <summary>Get or set the audio resample quality.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.LFELowpassFilterEnabled">
            <summary>Get or set whether the LFE low-pass filter is enabled.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.LFELowpassFilterCutoffFrequency">
            <summary>Get or set the LFE low-pass filter cutoff frequency.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.LFELowpassFilterQuality">
            <summary>Get or set the LFE low-pass filter quality.</summary>
        </member>
        <member name="P:Sony.Vegas.ProjectAudioProperties.RecordedFilesFolder">
            <summary>Get or set the folder containing recorded files.</summary>
        </member>
        <member name="T:Sony.Vegas.RulerProperties">
            <summary>Represents a project's ruler properties.</summary>
        </member>
        <member name="P:Sony.Vegas.RulerProperties.Format">
            <summary>Get or set the ruler format.</summary>
        </member>
        <member name="P:Sony.Vegas.RulerProperties.StartTime">
            <summary>Get or set the ruler start time.</summary>
        </member>
        <member name="P:Sony.Vegas.RulerProperties.BeatsPerMinute">
            <summary>Get or set the beats per minute.</summary>
        </member>
        <member name="P:Sony.Vegas.RulerProperties.BeatsPerMeasure">
            <summary>Get or set the beats per measure.</summary>
        </member>
        <member name="P:Sony.Vegas.RulerProperties.BeatValue">
            <summary>Get or set the beat value.</summary>
        </member>
        <member name="T:Sony.Vegas.SummaryProperties">
            <summary>Represents a project's summary properties.</summary>
        </member>
        <member name="M:Sony.Vegas.SummaryProperties.GetItem(Sony.Vegas.SummaryProperties.FourCC)">
            <summary>Get summary item using FourCC code as key</summary>
        </member>
        <member name="M:Sony.Vegas.SummaryProperties.GetItem(System.String)">
            <summary>Get summary item a FourCC code or its friendly name as key</summary>
        </member>
        <member name="M:Sony.Vegas.SummaryProperties.SetItem(Sony.Vegas.SummaryProperties.FourCC,System.String)">
            <summary>Set A summary item using FourCC code as key</summary>
        </member>
        <member name="M:Sony.Vegas.SummaryProperties.SetItem(System.String,System.String)">
            <summary>Set summary item using a FourCC code or its friendly name as key.</summary>
            <returns>The FourCC code that was used to set the item.</returns>
        </member>
        <member name="P:Sony.Vegas.SummaryProperties.Title">
            <summary>Get or set the title.</summary>
        </member>
        <member name="P:Sony.Vegas.SummaryProperties.Artist">
            <summary>Get or set the artist.</summary>
        </member>
        <member name="P:Sony.Vegas.SummaryProperties.Engineer">
            <summary>Get or set the engineer.</summary>
        </member>
        <member name="P:Sony.Vegas.SummaryProperties.Copyright">
            <summary>Get or set the copyright.</summary>
        </member>
        <member name="P:Sony.Vegas.SummaryProperties.Comments">
            <summary>Get or set the comments.</summary>
        </member>
        <member name="T:Sony.Vegas.AudioCDProperties">
            <summary>Represents a project's audio CD properties.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioCDProperties.UPC">
            <summary>Get or set the UPC code.</summary>
        </member>
        <member name="P:Sony.Vegas.AudioCDProperties.FirstTrack">
            <summary>Get or set the first track index.</summary>
        </member>
        <member name="T:Sony.Vegas.Project">
            <summary>Represents the currently opened project.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.#ctor(System.Boolean,System.Boolean)">
            <summary>Creates a new Vegas project.</summary>
            <param name="promptSave">prompt user to save existing project if needed</param>
            <param name="showDialog">show the new project dialog</param>
        </member>
        <member name="M:Sony.Vegas.Project.#ctor">
            <summary>Creates a new Vegas project.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.AddVideoTrack">
            <summary>Adds a new video track to the project.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.AddAudioTrack">
            <summary>Adds a new audio track to the project.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.AddAudioBusTrack">
            <summary>Adds a new audio bus track to the project.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.AddAudioFXBusTrack(Sony.Vegas.PlugInNode)">
            <summary>Adds a new assignable audio effect bus track to the project.</summary>
            <param name="plugin">audio effect plugin associated with the bus track</param>
        </member>
        <member name="M:Sony.Vegas.Project.GroupSelectedTracks">
            <summary>Create a new track group from the selected tracks.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.UngroupSelectedTracks">
            <summary>Remove all selected tracks from their groups.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.InsertTime">
            <summary>Inserts time into the project, prompting the user to specify the amount of time.</summary>
        </member>
        <member name="M:Sony.Vegas.Project.InsertTime(Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Inserts time into the project.</summary>
            <param name="start">Start of inserted time.</param>
            <param name="length">Length of inserted time.</param>
        </member>
        <member name="M:Sony.Vegas.Project.InsertTime(Sony.Vegas.Timecode,Sony.Vegas.Timecode,System.Boolean)">
            <summary>Inserts time into the project.</summary>
            <param name="start">Start of inserted time.</param>
            <param name="length">Length of inserted time.</param>
            <param name="ignoreSelection">Whether to ignore the current set of selected events.</param>
        </member>
        <member name="P:Sony.Vegas.Project.Tracks">
            <summary>Get the list of tracks.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.BusTracks">
            <summary>Get the list of bus tracks.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.VideoBus">
            <summary>Gets the video bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.MasterBus">
            <summary>Gets the master audio bus track.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.MediaPool">
            <summary>Get the collection of media.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Markers">
            <summary>Get the list of time line markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Regions">
            <summary>Get the list of time line region markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.CDIndices">
            <summary>Get the list of CD index markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.CDTracks">
            <summary>Get the list of CD track markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.CommandMarkers">
            <summary>Get the list of command markers.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.TrackGroups">
            <summary>Get the list of track groups.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.TrackEventGroups">
            <summary>Get the list of track event groups.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Groups">
            <summary>Get the list of track event groups. (Depricated. Use TrackEventGroups property)</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Video">
            <summary>Get the object representing the project's video properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Preview">
            <summary>Get the object representing the project's preview video properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Audio">
            <summary>Get the object representing the project's audio properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Ruler">
            <summary>Get the object representing the project's ruler properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Summary">
            <summary>Get the object representing the project's summary properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.AudioCD">
            <summary>Get the object representing the project's audio CD properties.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.Length">
            <summary>Get the length of the entire project.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.IsModified">
            <summary>Get whether the project has been modified.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.IsUntitled">
            <summary>Get a value that indicates whether the project is untitled and has not yet been saved.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.FilePath">
            <summary>Get the full path of the project file.</summary>
        </member>
        <member name="P:Sony.Vegas.Project.CustomData">
            <summary>Gets the container for custom data associated with the project.</summary>
        </member>
        <member name="T:Sony.Vegas.TransportControl">
            <summary>Represents transport controls in Vegas.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.Play">
            <summary>Begin playback from the current cursor location.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.PlayFromStart">
            <summary>Begin playback from the start of the project.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.Stop">
            <summary>Stop playback and return to the cursor position.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.Pause">
            <summary>Stop playback and move the cursor to the current position.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.ViewCursor(System.Boolean)">
            <summary>Show the cursor position in the track view, scrolling if necessary.</summary>
            <param name="centered">indicates whether the cursor position should be centered in the track view or, if false, at the nearest edge</param>    
        </member>
        <member name="M:Sony.Vegas.TransportControl.ZoomSelection">
            <summary>Zoom the track view to fit the current selection, scrolling if necessary.</summary>
        </member>
        <member name="M:Sony.Vegas.TransportControl.Suspend">
            <summary>Suspends the current transport mode.</summary>
            <returns>An IDisposable object that resumes the current transport mode when its Dispose method is called.</returns>
        </member>
        <member name="P:Sony.Vegas.TransportControl.IsPlaying">
            <summary>Get a value which indicates whether playback is in progress.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.IsRecording">
            <summary>Get a value which indicates whether recording is in progress.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.IsRecordMonitoring">
            <summary>Get a value which indicates whether record monitoring is in progress.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.CursorPosition">
            <summary>Get or set the cursor position.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.SelectionStart">
            <summary>Get or set the start of the timeline selection.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.SelectionLength">
            <summary>Get or set the length of the timeline selection.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.PlayCursorPosition">
            <summary>Get the playback cursor position.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.LoopMode">
            <summary>Get or set whether playback is looped around the selection</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.LoopRegionStart">
            <summary>Get or set the start of the timeline loop region.</summary>
        </member>
        <member name="P:Sony.Vegas.TransportControl.LoopRegionLength">
            <summary>Get or set the length of the timeline loop region.</summary>
        </member>
        <member name="T:Sony.Vegas.DockableControl">
            <summary>Represents a user control that can be docked in the Vegas user interface.</summary>
        </member>
        <member name="F:Sony.Vegas.DockableControl.myVegas">
            <summary>The Vegas application object.</summary>
        </member>
        <member name="F:Sony.Vegas.DockableControl.myInstanceName">
            <summary>The unique name associated with this dockable control.</summary>
        </member>
        <member name="M:Sony.Vegas.DockableControl.#ctor(System.String)">
            <summary>Create a new docakable control with the specified instance name.</summary>
            <param name="instanceName">The name used to identify this dockable control.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.Dispose(System.Boolean)">
            <summary>Release resources related to this dockable control.</summary>
        </member>
        <member name="M:Sony.Vegas.DockableControl.SaveFocus">
            <summary>Call this method before showing a modal dialog so
            that focus will be restored to the dockable control after the
            dialog is dismissed.</summary>
        </member>
        <member name="M:Sony.Vegas.DockableControl.SaveFocus(System.Windows.Forms.Control)">
            <summary>Call this method before showing a modal dialog so
            that focus will be restored to the provided Control after the
            dialog is dismissed.</summary>
            <param name="focusControl">the Control that should receive focus</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.SetFocusToMainTrackView">
            <summary>Sends input focus to Vegas' main track view.</summary>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnParentWindowChanged(System.EventArgs)">
            <summary>Raises the ParentWindowChanged event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnCaptionDoubleClick(Sony.Vegas.CaptionDoubleClickEventArgs)">
            <summary>Raises the CaptionDoubleClick event.</summary>
            <param name="args">A CaptionDoubleClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnWindowMove(System.EventArgs)">
            <summary>Raises the WindowMove event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.Close">
            <summary>Close the dock window that contains this control.</summary>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the Closing event.</summary>
            <param name="args">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnClosed(System.EventArgs)">
            <summary>Raises the Closed event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnAppWindowClosing(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the AppWindowClosing event.</summary>
            <param name="args">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.ResumeCloseAppWindow(System.ComponentModel.CancelEventArgs)">
            <summary>Resumes application shutdown precedures after an AppWindowClosing event was canceled.</summary>
            <param name="args">The arguments passed to the AppWindowClosing event that was canceled.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnAppWindowClosed(System.EventArgs)">
            <summary>Raises the AppWindowClosed event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.DockableControl.OnLoaded(System.EventArgs)">
            <summary>Raises the Loaded event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Sony.Vegas.DockableControl.InstanceName">
            <summary>Get the unique name that identifies this instance of a dockable control.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.DisplayName">
            <summary>Get or set the control's display name.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.DockWindow">
            <summary>Get or set the dock window interface that helps manage this dockable control.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.DefaultDockWindowStyle">
            <summary>Get the default style of dock window that should contain this control.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.DefaultFloatingSize">
            <summary>Get or set the default size of the control when contained by a floating window.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.DefaultFloatingLocation">
            <summary>Get or set the default location of the control when contained by a floating window.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.HasModalDockWindow">
            <summary>Get or set a value that indicates whether the control's window is modal.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.PersistDockWindowState">
            <summary>Get or set a value that indicates whether the control's window state should be persisted.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.AutoLoadCommand">
            <summary>Get or set the custom command that loads this control.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.ParentWindow">
            <summary>Get the window that contains this control.</summary>
        </member>
        <member name="P:Sony.Vegas.DockableControl.OwnerWindow">
            <summary>Get the window that owns this control (typically Vegas' main window).</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.ParentWindowChanged">
            <summary>Occurs when the dockable control is docked or undocked and the ParentWindow property changes.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.CaptionDoubleClick">
            <summary>Occurs when the user double clicks the caption of the control's dock window.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.WindowMove">
            <summary>Occurs when the user moves control's dock window.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.Closing">
            <summary>Occurs when the user attempts to close the dock window that contains this control.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.Closed">
            <summary>Occurs when the dock window that contains this control is closed.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.AppWindowClosing">
            <summary>Occurs when the user attempts to close Vegas' main window.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.AppWindowClosed">
            <summary>Occurs when Vegas' main window is closed.</summary>
        </member>
        <member name="E:Sony.Vegas.DockableControl.Loaded">
            <summary>Occurs after the dockable control has been loaded.</summary>
        </member>
        <member name="T:Sony.Vegas.CaptionDoubleClickEventHandler">
            <summary>Represents the method that handles a CaptionDoubleClick event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A CaptionDoubleClickEventArgs that contains the event data.</param>
        </member>
        <member name="T:Sony.Vegas.CaptionDoubleClickEventArgs">
            <summary>Event arguments passed when the user double-clicks the caption of a dockable control.</summary>
        </member>
        <member name="P:Sony.Vegas.CaptionDoubleClickEventArgs.NoSizeChange">
            <summary>Get a value that indicates whether the window should be resized.</summary>
        </member>
        <member name="P:Sony.Vegas.CaptionDoubleClickEventArgs.GenericSizeChange">
            <summary>Get or set a value that indicates whether the window should be resized using Vegas' default algorithm.</summary>
        </member>
        <member name="P:Sony.Vegas.CaptionDoubleClickEventArgs.ControlSize">
            <summary>Get or set the new size of the window.</summary>
        </member>
        <member name="T:Sony.Vegas.ProgressWorker">
            <summary>Represents an object that performs work on Vegas' asynchronous task manager.</summary>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.#ctor">
            <summary>Creates a new progress worker.</summary>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnDoWork(Sony.Vegas.ProgressEventArgs)">
            <summary>Raises the DoWork event.</summary>
            <param name="args">A ProgressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnCompleteWork(Sony.Vegas.ProgressEventArgs)">
            <summary>Raises the CompleteWork event.</summary>
            <param name="args">A ProgressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnStatusBegin(System.EventArgs)">
            <summary>Raises the StatusBegin event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnStatusUpdate(System.EventArgs)">
            <summary>Raises the StatusUpdate event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnStatusEnd(System.EventArgs)">
            <summary>Raises the StatusEnd event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Sony.Vegas.ProgressWorker.OnDequeued(System.EventArgs)">
            <summary>Raises the Dequeued event.</summary>
            <param name="args">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.ProgressText">
            <summary>Get or set the text displayed in Vegas' status bar while the work is done.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.ProgressMin">
            <summary>Get or set the minimum amount of work.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.ProgressMax">
            <summary>Get or set the maximum amount of work.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.Progress">
            <summary>Get or set the amount of work that has been completed.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.PercentComplete">
            <summary>Get the percentage of work completed.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.BlockUserInput">
            <summary>Get or set a value that indicates whether normal user input should be blocked while the work is in progress (default is true).</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.SerializeWork">
            <summary>Get or set a value that indicates whether the work should be performed after previously queued work completes (default is true).</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.Canceled">
            <summary>Get a value that indicates whether the task has been canceled.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.StatusDialog">
            <summary>Get or set a Form window that appears while the worker performs its task.</summary>
        </member>
        <member name="P:Sony.Vegas.ProgressWorker.KeepStatusDialog">
            <summary>Get or set a value that indicates whether the status dialog should remain visible after the task completes.</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.DoWork">
            <summary>Occurs when the worker should perform its work (off the main window thread).</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.CompleteWork">
            <summary>Occurs when the worker should finish its work (on the main window thread).</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.StatusBegin">
            <summary>Occurs just before the work begins.</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.StatusUpdate">
            <summary>Occurs when work status should be updated.</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.StatusEnd">
            <summary>Occurs just after the work ends.</summary>
        </member>
        <member name="E:Sony.Vegas.ProgressWorker.Dequeued">
            <summary>Occurs when the worker is removed from the task manager's queue.</summary>
        </member>
        <member name="T:Sony.Vegas.ProgressEventArgs">
            <summary>Represents the arguments passed to a progress worker event.</summary>
        </member>
        <member name="T:Sony.Vegas.ProgressEventHandler">
            <summary>Represents a method that handles a progress worker event.</summary>
            <param name="worker">The ProgressWorker that sent the event.</param>
            <param name="args">A ProgressEventArgs that contains the event data.</param>
        </member>
        <member name="T:Sony.Vegas.RenderArgs">
            <summary>Arguments for a render operation</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.OutputFile">
            <summary>Get or set the full path of the output file.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.OutputFileName">
            <summary>Get the name of the output file.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.RenderTemplate">
            <summary>Get or set the render template to use for the render operation.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.Start">
            <summary>Get or set project start time of the region to render.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.Length">
            <summary>Get or set length of the region to render.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.UseSelection">
            <summary>Get or set whether to render the currently selected region of the project.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.IncludeMarkers">
            <summary>Get or set whether to include the project markers and regions in the output file.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.StretchToFill">
            <summary>Get or set whether to scale video to match the size of the output file.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.SaveAsMonoStreams">
            <summary>Get or set whether to save audio as separate mono streams.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.SaveAsMono">
            <summary>Get or set whether to save audio as a single mono stream.</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.UseChannelMapping">
            <summary>Get or set whether to use multichannel mapping for rendering (when applicable).</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.UseProjectRotation">
            <summary>Get or set whether to use project output rotation settings (when applicable).</summary>
        </member>
        <member name="P:Sony.Vegas.RenderArgs.SaveProjectPathLink">
            <summary>Get or set whether to save a relative path link to the current project in the rendered media file (when applicable).</summary>
        </member>
        <member name="T:Sony.Vegas.Vegas">
            <summary>Represents the Vegas application.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.GetApplicationDataPath(System.Environment.SpecialFolder)">
            <summary>Get the directory that contains Vegas' application data files.</summary>
            <param name="baseFolder">which application data directory (ApplicationData, LocalApplicationData, or CommonApplicationData)</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.NewProject(System.Boolean,System.Boolean)">
            <summary>Creates a new project.</summary>
            <param name="promptSave">prompt user to save existing project if needed</param>
            <param name="showDialog">show the new project dialog</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.NewProject">
            <summary>Creates a new project.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveProjectDialog(System.String)">
            <summary>Saves the current project to disk after prompting the user with the Save Project dialog.</summary>
            <param name="fileName">Default value of the full path of the project file.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveProject(System.String)">
            <summary>Saves the current project to disk.</summary>
            <param name="fileName">Full path of the project file.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveProject">
            <summary>Saves the current project to disk.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.ArchiveProject(System.String)">
            <summary>Archives the current project along with a trimmed copy of all media.</summary>
            <param name="fileName">project file (full path)</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFile(System.String)">
            <summary>Open a media or project file.</summary>
            <param name="fileName">The full path of the file to open</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFile(System.String,System.Boolean)">
            <summary>Open a media or project file.</summary>
            <param name="fileName">The full path of the file to open</param>
            <param name="mediaPoolOnly">Add media files to the media pool only</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFile(System.String)">
            <summary>Import a media or nested project file into the current project.</summary>
            <param name="fileName">The full path of the file to import</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFile(System.String,System.Boolean)">
            <summary>Import a media or nested project file into the current project.</summary>
            <param name="fileName">The full path of the file to import</param>
            <param name="mediaPoolOnly">Add media files to the media pool only</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFileDialog">
            <summary>Open one or more files using Vegas' Open dialog box.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFileDialog(System.String)">
            <summary>Open one or more files using Vegas' Open dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFileDialog(System.String,System.Boolean)">
            <summary>Open one or more files using Vegas' Open dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
            <param name="mediaPoolOnly">Add selected media files to the media pool only.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenFileDialog(System.String,System.Boolean,System.String[]@)">
            <summary>Open one or more files using Vegas' Open dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
            <param name="mediaPoolOnly">Add selected media files to the media pool only.</param>
            <param name="filePaths">Array of file paths selected by the user.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFileDialog">
            <summary>Import one or more files using Vegas' Import dialog box.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFileDialog(System.String)">
            <summary>Import one or more files using Vegas' Import dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFileDialog(System.String,System.Boolean)">
            <summary>Import one or more files using Vegas' Import dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
            <param name="mediaPoolOnly">Add selected media files to the media pool only.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ImportFileDialog(System.String,System.Boolean,System.String[]@)">
            <summary>Import one or more files using Vegas' Import dialog box.</summary>
            <param name="initialDir">The initial directory displayed by the dialog box</param>
            <param name="mediaPoolOnly">Add selected media files to the media pool only.</param>
            <param name="filePaths">Array of file paths selected by the user.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenProject">
            <summary>Obsolete. Use OpenFileDialog method.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.OpenProject(System.String)">
            <summary>Obsolete. Use the OpenFile method.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.WaitForIdle">
            <summary>Wait for asynchonous actions (such as building audio peaks) to complete.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.BeginRender(Sony.Vegas.RenderArgs)">
            <summary>Begins rendering the project using the parameters specified by a RenderArgs object.</summary>
            <param name="args">parameters for the render operation.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.Render(Sony.Vegas.RenderArgs)">
            <summary>Renders the project using the parameters specified by a RenderArgs object.</summary>
            <param name="args">parameters for the render operation.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.Render(System.String,Sony.Vegas.RenderTemplate,Sony.Vegas.Timecode,Sony.Vegas.Timecode)">
            <summary>Renders the specified region of the project.</summary>
            <param name="outputFile">full path of rendered output file</param>
            <param name="renderTemplate">render template to use</param>
            <param name="start">project start time of rendered output</param>
            <param name="length">length of rendered output</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.Render(System.String,Sony.Vegas.RenderTemplate)">
            <summary>Renders the entire project.</summary>
            <param name="outputFile">full path of rendered output file</param>
            <param name="renderTemplate">render template to use</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveSnapshot(System.String,Sony.Vegas.ImageFileFormat,Sony.Vegas.Timecode)">
            <summary>Renders and saves a still image file to disk.</summary>
            <param name="outputFile">full path of rendered output file</param>
            <param name="format">image file format</param>
            <param name="seekTime">project position of image</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveSnapshot(System.String,Sony.Vegas.ImageFileFormat)">
            <summary>Renders and saves a still image file to disk.</summary>
            <param name="outputFile">full path of rendered output file</param>
            <param name="format">image file format</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveSnapshot(Sony.Vegas.Timecode)">
            <summary>Renders and saves a still image file to the clipboard.</summary>
            <param name="seekTime">project position of image</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.SaveSnapshot">
            <summary>Renders and saves a still image file to the clipboard.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.UpdateUI">
            <summary>Redraws the Vegas user interface.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.Exit">
            <summary>Quits the Vegas application upon completion of the script.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.DebugOut(System.String)">
            <summary>Sends strings to the ScriptEditor output window.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.DebugClear">
            <summary>Clears the ScriptEditor output window.</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.QueueProgressWorker(Sony.Vegas.ProgressWorker)">
            <summary>Adds a worker to Vegas' queue of asynchronous tasks.</summary>
            <param name="worker">The ProgressWorker that performs the task.</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.CancelAsynchronousTasks">
            <summary>Cancels any remaining asynchronous tasks (including the current one).</summary>
        </member>
        <member name="M:Sony.Vegas.Vegas.LoadDockView(Sony.Vegas.IDockView)">
            <summary>Load the specified dock view.</summary>
            <param name="dockview">the dock view to load</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ActivateDockView(System.String)">
            <summary>Attempts to activate the dock view that has specified instance name.</summary>
            <param name="instanceName">the instance name of the dock view</param>
            <returns>True if the dock view is activated, false otherwise.</returns>
        </member>
        <member name="M:Sony.Vegas.Vegas.FindDockView(System.String)">
            <summary>Indicates whether a dock view that has the specified instance name is loaded.</summary>
            <param name="instanceName">the instance name of the dock view</param>
            <returns>True if the dock view is loaded, false otherwise.</returns>
        </member>
        <member name="M:Sony.Vegas.Vegas.FindDockView(System.String,Sony.Vegas.IDockView@)">
            <summary>Attempts to find a dock view that has the specified instance name.</summary>
            <param name="instanceName">the instance name of the dock view</param>
            <param name="dockview">the dock view</param>
            <returns>True if the dock view is loaded, false otherwise.</returns>
        </member>
        <member name="M:Sony.Vegas.Vegas.RunScriptFile(System.String)">
            <summary>Run a script from a file.</summary>
            <param name="scriptFile">the complete file path of the script to run</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.RunScriptFile(System.String,System.String)">
            <summary>Run a script from a file.</summary>
            <param name="scriptFile">the complete file path of the script to run</param>
            <param name="scriptArgs">script arguments</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.RunScriptText(Sony.Vegas.ScriptEngineType,System.String)">
            <summary>Run a script from a text in memory.</summary>
            <param name="engineType">the type of script engine used to compile the script</param>
            <param name="scriptText">the text of the script</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.RunScriptText(Sony.Vegas.ScriptEngineType,System.String,System.String)">
            <summary>Run a script from a text in memory.</summary>
            <param name="engineType">the type of script engine used to compile the script</param>
            <param name="scriptText">the text of the script</param>
            <param name="scriptArgs">script arguments</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ShowError(System.String)">
            <summary>Shows error message dialog.</summary>
            <param name="msg">error message</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ShowError(System.String,System.String)">
            <summary>Shows error message dialog.</summary>
            <param name="msg">error message</param>
            <param name="details">error details</param>
        </member>
        <member name="M:Sony.Vegas.Vegas.ShowError(System.Exception)">
            <summary>Shows error message dialog.</summary>
            <param name="e">error exception</param>
        </member>
        <member name="P:Sony.Vegas.Vegas.MainWindow">
            <summary>Get an interface that provides Vegas' main window handle.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.AppCultureInfo">
            <summary>Get the CultureInfo that represents the culture used by the application.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Version">
            <summary>Get the version of Vegas.</summary>
            <type>System.String</type>
        </member>
        <member name="P:Sony.Vegas.Vegas.TemporaryFilesPath">
            <summary>Get the directory that contains Vegas' temporary files (configured by user).</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.ApplicationDataPath">
            <summary>Obsolete. Use GetApplicationDataPath method.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.InstallationDirectory">
            <summary>Get the directory that contains the running Vegas executable and accompanying files.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Project">
            <summary>Get the current Project</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Transport">
            <summary>Get the transport control object for Vegas' main timeline.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.PlugIns">
            <summary>Get the root plug-in node.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.VideoFX">
            <summary>Get the root plug-in node for video effects.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.AudioFX">
            <summary>Get the root plug-in node for audio effects.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Transitions">
            <summary>Get the root plug-in node for video transitions.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Generators">
            <summary>Get the root plug-in node for video generators.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.VideoCompositeFX">
            <summary>Get the root plug-in node for video compositing effects.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Renderers">
            <summary>Get the collection of render plug-ins.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.Cursor">
            <summary>Obsolete. Use the CursorPosition property of the TransportControl object.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.LoopPlayback">
            <summary>Obsolete. Use the LoopMode property of the TransportControl object.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.LoopMode">
            <summary>Obsolete. Use the LoopMode property of the TransportControl object.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.SelectionStart">
            <summary>Obsolete. Use the SelectionStart or LoopRegionStart property of the TransportControl object.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.SelectionLength">
            <summary>Obsolete. Use the SelectionLength or LoopRegionLength property of the TransportControl object.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.BypassAllAudioFX">
            <summary>Get or set whether all audio effects are bypassed.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.ProjectOpening">
            <summary>Occurs when a Vegas begins to open a project file.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.ProjectOpened">
            <summary>Occurs when a project is opened.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.ProjectClosed">
            <summary>Occurs when a project is closed.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.RenderStarted">
            <summary>Occurs when a render operation is started.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.RenderProgress">
            <summary>Occurs when a render operation's progress is updated.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.RenderFinished">
            <summary>Occurs when a render operation is finished.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.AppInitialized">
            <summary>Occurs when the Vegas application completes initialization.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.AppActivated">
            <summary>Occurs when the Vegas application activates.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.AppDeactivate">
            <summary>Occurs when the Vegas application deactivates.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.AppSkinChanged">
            <summary>Occurs when the Vegas application skin changes.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.MissingMedia">
            <summary>Occurs when missing media is encountered when loading a project.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.TrackCountChanged">
            <summary>Occurs when tracks are added or removed.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.TrackStateChanged">
            <summary>Occurs when tracks change state.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.TrackEventCountChanged">
            <summary>Occurs when track events are added or removed.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.TrackEventStateChanged">
            <summary>Occurs when track events change state.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.TrackEventTimeChanged">
            <summary>Occurs when track events change position or size.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.MarkersChanged">
            <summary>Occurs when markers or regions are added, removed, or changed.</summary>
        </member>
        <member name="E:Sony.Vegas.Vegas.MediaPoolChanged">
            <summary>Occurs when media is added or removed from the media pool.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.ResumePlaybackOnScriptExit">
            <summary>Set whether Vegas should resume playback when the script completes.</summary>
        </member>
        <member name="P:Sony.Vegas.Vegas.UnloadScriptDomainOnScriptExit">
            <summary>Set whether Vegas should unload the app domain when the script completes.</summary>
        </member>
        <member name="T:Sony.Vegas.ProjectOpeningEventHandler">
            <summary>Represents the method that handles a ProjectOpening event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A ProjectOpeningEventArgs that contains the event data.</param>
        </member>
        <member name="T:Sony.Vegas.ProjectOpeningEventArgs">
            <summary>Arguments provided to ProjectOpening event handlers.</summary>
        </member>
        <member name="F:Sony.Vegas.ProjectOpeningEventArgs.ProjectFile">
            <summary>Name of the project file being opened.</summary>
        </member>
        <member name="T:Sony.Vegas.MissingMediaEventHandler">
            <summary>Represents the method that handles a MissingMedia event.</summary>
            <param name="sender">The source of the event.</param>
            <param name="args">A MissingMediaEventArgs that contains the event data.</param>
        </member>
        <member name="T:Sony.Vegas.MissingMediaEventArgs">
            <summary>Arguments provided to MissingMedia event handlers.</summary>
        </member>
        <member name="P:Sony.Vegas.MissingMediaEventArgs.MissingMedia">
            <summary>Get the name of the missing media file.</summary>
        </member>
        <member name="P:Sony.Vegas.MissingMediaEventArgs.IgnoreMissingMedia">
            <summary>Set to true to bypass the missing media dialog and leave the media offline.</summary>
        </member>
        <member name="T:Sony.Vegas.RenderStatusEventArgs">
            <summary>Arguments provided to RenderFinished and RenderProgress event handlers.</summary>
        </member>
        <member name="F:Sony.Vegas.RenderStatusEventArgs.Status">
            <summary>Get the current status of the render operation.</summary>
        </member>
        <member name="F:Sony.Vegas.RenderStatusEventArgs.Result">
            <summary>Get the result code (HRESULT) of the render operation.</summary>
        </member>
        <member name="F:Sony.Vegas.RenderStatusEventArgs.ErrorMessage">
            <summary>Get the error message string (if any) for the render operation.</summary>
        </member>
        <member name="F:Sony.Vegas.RenderStatusEventArgs.PercentComplete">
            <summary>Get the percent of the render operation that has completed.</summary>
        </member>
        <member name="M:Sony.Vegas.RenderStatusEventArgs.ResultDescription">
            <summary>Returns a description of the render operation's status or, if available, its error message.</summary>
        </member>
        <member name="T:Sony.Vegas.ScriptArg">
            <summary>Script argument name/value pair.</summary>
        </member>
        <member name="M:Sony.Vegas.ScriptArg.#ctor">
            <summary>Construct a new script argument with no name or value.</summary>
        </member>
        <member name="M:Sony.Vegas.ScriptArg.#ctor(System.String)">
            <summary>Construct a new script argument with name and value separated by the '=' or ':' character.</summary>
            <param name="szArg">Argument name and value separated by the '=' or ':' character.</param>
        </member>
        <member name="F:Sony.Vegas.ScriptArg.Name">
            <summary>Script argument name.</summary>
        </member>
        <member name="F:Sony.Vegas.ScriptArg.Value">
            <summary>Script argument value.</summary>
        </member>
        <member name="M:Sony.Vegas.ScriptArg.ToString">
            <summary>Get the string representation of the script argument.</summary>
        </member>
        <member name="T:Sony.Vegas.ScriptArgs">
            <summary>Represents a list of script arguments.</summary>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.Add(Sony.Vegas.ScriptArg)">
            <summary>Add a script argument to the list.</summary>
            <param name="aArg">Script argument to add to the list.</param>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.Remove(System.Int32)">
            <summary>Add a script argument to the list by index.</summary>
            <param name="index">Index of the script argument to remove from the list.</param>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.Exists(System.String)">
            <summary>Determines whether a script argument is contained in the list.</summary>
            <param name="sKey">The name of the script argument.</param>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.Exists(System.String,System.Boolean)">
            <summary>Determines whether a script argument is contained in the list.</summary>
            <param name="sKey">The name of the script argument.</param>
            <param name="fIgnoreCase">Whether to ignore capitalization when searching for the argument.</param>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.ValueOf(System.String)">
            <summary>Get the value of the script argument with a given name.</summary>
            <param name="sKey">The name of the script argument.</param>
        </member>
        <member name="M:Sony.Vegas.ScriptArgs.ValueOf(System.String,System.Boolean)">
            <summary>Get the value of the script argument with a given name.</summary>
            <param name="sKey">The name of the script argument.</param>
            <param name="fIgnoreCase">Whether to ignore capitalization when searching for the argument.</param>
        </member>
        <member name="P:Sony.Vegas.ScriptArgs.Item(System.Int32)">
            <summary>Get or set a script argument by index.</summary>
            <param name="index">Index of the script argument to get or set.</param>
        </member>
        <member name="M:Sony.Vegas.Script.Host(Sony.Vegas.Vegas)">
            <summary>
            Not intended for use by Scripts. Used by Vegas to initialize the Script class  
            </summary>
        </member>
        <member name="M:Sony.Vegas.Script.SetArgs(System.String,Sony.Vegas.ScriptArgs,System.String,System.Xml.XmlDocument)">
            <summary>
            not intended for use by scripts. used by Vegas to intitialize the Script class. 
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.Application">
            <summary>
            the Vegas object for the current execution environment.  
            This is the same object that is passed to your script's entry point. 
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.File">
            <summary>
            the full pathname for the script file. 
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.RawArgs">
            <summary>
            arguments provided when the script was invoked as a raw, unparsed string.
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.Args">
            <summary>
            arguments provided when the script was invoked, parsed into a collection of key,value
            pairs.
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.Settings">
            <summary>
            The Xml Configuration Settings for the current script. May be null
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.Name">
            <summary>
            the filename of the script without path information. 
            </summary>
        </member>
        <member name="P:Sony.Vegas.Script.Directory">
            <summary>
            the directory that the script is run from
            </summary>
        </member>
        <member name="T:Sony.Vegas.CustomCommand">
            <summary>Represents a command that extends or customizes the Vegas application.</summary>
        </member>
        <member name="M:Sony.Vegas.CustomCommand.#ctor(Sony.Vegas.CommandCategory,System.String)">
            <summary>Creates a new custom command.</summary>
            <param name="category">the command category</param>    
            <param name="name">the unique locale-invariant name of the command</param>    
        </member>
        <member name="M:Sony.Vegas.CustomCommand.HasChildren">
            <summary>Get a value that indicates whether the command contains sub-commands.</summary>
        </member>
        <member name="M:Sony.Vegas.CustomCommand.AddChild(Sony.Vegas.CustomCommand)">
            <summary>Add a sub-command to this command.</summary>
        </member>
        <member name="M:Sony.Vegas.CustomCommand.GetChildren">
            <summary>Get the collection of this command's sub-commands.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.Category">
            <summary>Get the category of the command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.Name">
            <summary>Get the unique locale-invariant name of the command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.FullName">
            <summary>Get the unique locale-invariant full name of the command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.DisplayName">
            <summary>Get the localized display name of the command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.FullDisplayName">
            <summary>Get the localized full display name of the command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.Parent">
            <summary>Get the parent of this command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.ID">
            <summary>Get the unique identifier assigned to this command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.MenuItemName">
            <summary>Get or set the string displayed in menu items created for this command.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.IconFile">
            <summary>Get or set the name of a PNG file that is used as a small icon (16x16) in the tool bar and menu items.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.MenuSelectMessage">
            <summary>Get or set the message displayed in Vegas' status bar when the user's mouse hovers over the command's menu item.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.CanAddToKeybindings">
            <summary>Get or set a value that indicates whether the command can be included in the customized keyboard settings.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.CanAddToToolbar">
            <summary>Get or set a value that indicates whether the command can be added to the tool bar.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.CanAddToMenu">
            <summary>Get or set a value that indicates whether the command can be added to a menu.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.Enabled">
            <summary>Get or set a value that indicates whether the command is enabled.</summary>
        </member>
        <member name="P:Sony.Vegas.CustomCommand.Checked">
            <summary>Get or set a value that indicates whether the command's user interface elements appear checked or selected.</summary>
        </member>
        <member name="E:Sony.Vegas.CustomCommand.Invoked">
            <summary>Occurs when the command is invoked.</summary>
        </member>
        <member name="E:Sony.Vegas.CustomCommand.MenuPopup">
            <summary>Occurs just before the command's menu item appears.</summary>
        </member>
        <member name="T:Sony.Vegas.ICustomCommandModule">
            <summary>Defines initialization routines for hosting a set of custom commands.</summary>
        </member>
        <member name="M:Sony.Vegas.ICustomCommandModule.InitializeModule(Sony.Vegas.Vegas)">
            <summary>Initialize the module which hosts a set of custom commands.</summary>
            <param name="vegas">the Vegas application object</param>    
        </member>
        <member name="M:Sony.Vegas.ICustomCommandModule.GetCustomCommands">
            <summary>Get the collection of custom command objects hosted by this module.</summary>
        </member>
    </members>
</doc>
